diff --git a/node_modules/@nivo/network/dist/nivo-network.cjs.js b/node_modules/@nivo/network/dist/nivo-network.cjs.js
index 137a6f7..63d938a 100644
--- a/node_modules/@nivo/network/dist/nivo-network.cjs.js
+++ b/node_modules/@nivo/network/dist/nivo-network.cjs.js
@@ -112,6 +112,34 @@ function _slicedToArray(arr, i) {
   return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
 }
 
+var Node = function Node(_ref) {
+  var node = _ref.node,
+      x = _ref.x,
+      y = _ref.y,
+      radius = _ref.radius,
+      color = _ref.color,
+      borderWidth = _ref.borderWidth,
+      borderColor = _ref.borderColor,
+      _ref$scale = _ref.scale,
+      scale = _ref$scale === void 0 ? 1 : _ref$scale,
+      handleNodeHover = _ref.handleNodeHover,
+      handleNodeLeave = _ref.handleNodeLeave;
+  return React__default.createElement("circle", {
+    transform: "translate(".concat(x, ",").concat(y, ") scale(").concat(scale, ")"),
+    r: radius,
+    fill: color,
+    strokeWidth: borderWidth,
+    stroke: borderColor,
+    onMouseEnter: function onMouseEnter(event) {
+      return handleNodeHover(node, event);
+    },
+    onMouseMove: function onMouseMove(event) {
+      return handleNodeHover(node, event);
+    },
+    onMouseLeave: handleNodeLeave
+  });
+};
+
 var commonPropTypes = {
   nodes: PropTypes.arrayOf(PropTypes.shape({
     id: PropTypes.string.isRequired
@@ -129,6 +157,7 @@ var commonPropTypes = {
   nodeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,
   nodeBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,
   nodeBorderColor: colors.inheritedColorPropType.isRequired,
+  nodeComponent: PropTypes.func.isRequired,
   linkThickness: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,
   linkColor: colors.inheritedColorPropType.isRequired,
   isInteractive: PropTypes.bool.isRequired
@@ -146,6 +175,7 @@ var commonDefaultProps = {
   distanceMin: 1,
   distanceMax: Infinity,
   iterations: 90,
+  nodeComponent: Node,
   nodeBorderWidth: 0,
   nodeBorderColor: {
     from: 'color'
@@ -252,6 +282,14 @@ var useNodeColor = function useNodeColor(color) {
     };
   }, [color]);
 };
+var useNodeComponent = function useNodeComponent(nodeComponent) {
+  return React.useMemo(function () {
+    if (typeof nodeComponent === 'function') return nodeComponent;
+    return function () {
+      return nodeComponent;
+    };
+  }, [nodeComponent]);
+};
 var useLinkThickness = function useLinkThickness(thickness) {
   return React.useMemo(function () {
     if (typeof thickness === 'function') return thickness;
@@ -261,35 +299,6 @@ var useLinkThickness = function useLinkThickness(thickness) {
   }, [thickness]);
 };
 
-var Node = function Node(_ref) {
-  var node = _ref.node,
-      x = _ref.x,
-      y = _ref.y,
-      radius = _ref.radius,
-      color = _ref.color,
-      borderWidth = _ref.borderWidth,
-      borderColor = _ref.borderColor,
-      _ref$scale = _ref.scale,
-      scale = _ref$scale === void 0 ? 1 : _ref$scale,
-      handleNodeHover = _ref.handleNodeHover,
-      handleNodeLeave = _ref.handleNodeLeave;
-  return React__default.createElement("circle", {
-    transform: "translate(".concat(x, ",").concat(y, ") scale(").concat(scale, ")"),
-    r: radius,
-    fill: color,
-    strokeWidth: borderWidth,
-    stroke: borderColor,
-    onMouseEnter: function onMouseEnter(event) {
-      return handleNodeHover(node, event);
-    },
-    onMouseMove: function onMouseMove(event) {
-      return handleNodeHover(node, event);
-    },
-    onMouseLeave: handleNodeLeave
-  });
-};
-var Node$1 = React.memo(Node);
-
 var willEnter = function willEnter(_ref) {
   var style = _ref.style;
   return {
@@ -316,7 +325,8 @@ var AnimatedNodes = function AnimatedNodes(_ref3) {
       borderWidth = _ref3.borderWidth,
       borderColor = _ref3.borderColor,
       handleNodeHover = _ref3.handleNodeHover,
-      handleNodeLeave = _ref3.handleNodeLeave;
+      handleNodeLeave = _ref3.handleNodeLeave,
+      nodeComponent = _ref3.nodeComponent;
   var _useMotionConfig = core.useMotionConfig(),
       springConfig = _useMotionConfig.springConfig;
   return React__default.createElement(reactMotion.TransitionMotion, {
@@ -339,7 +349,7 @@ var AnimatedNodes = function AnimatedNodes(_ref3) {
       var key = _ref4.key,
           style = _ref4.style,
           node = _ref4.data;
-      return React__default.createElement(Node$1, {
+      return React__default.createElement(nodeComponent, {
         key: key,
         node: node,
         x: style.x,
@@ -348,7 +358,6 @@ var AnimatedNodes = function AnimatedNodes(_ref3) {
         color: color(node),
         borderWidth: borderWidth,
         borderColor: borderColor(node),
-        scale: Math.max(style.scale, 0),
         handleNodeHover: handleNodeHover,
         handleNodeLeave: handleNodeLeave
       });
@@ -363,9 +372,10 @@ var StaticNodes = function StaticNodes(_ref) {
       borderWidth = _ref.borderWidth,
       borderColor = _ref.borderColor,
       handleNodeHover = _ref.handleNodeHover,
-      handleNodeLeave = _ref.handleNodeLeave;
+      handleNodeLeave = _ref.handleNodeLeave,
+      nodeComponent = _ref.nodeComponent;
   return nodes.map(function (node) {
-    return React__default.createElement(Node$1, {
+    return React__default.createElement(nodeComponent, {
       key: node.id,
       node: node,
       x: node.x,
@@ -500,6 +510,7 @@ var Network = function Network(props) {
       nodeColor = props.nodeColor,
       nodeBorderWidth = props.nodeBorderWidth,
       nodeBorderColor = props.nodeBorderColor,
+      nodeComponent = props.nodeComponent,
       linkThickness = props.linkThickness,
       linkColor = props.linkColor,
       tooltip$1 = props.tooltip,
@@ -515,6 +526,7 @@ var Network = function Network(props) {
       animate = _useMotionConfig.animate;
   var theme = core.useTheme();
   var getColor = useNodeColor(nodeColor);
+  var getNodeComponent = useNodeComponent(nodeComponent);
   var getBorderColor = colors.useInheritedColor(nodeBorderColor, theme);
   var getLinkThickness = useLinkThickness(linkThickness);
   var getLinkColor = colors.useInheritedColor(linkColor, theme);
@@ -556,6 +568,7 @@ var Network = function Network(props) {
       color: getColor,
       borderWidth: nodeBorderWidth,
       borderColor: getBorderColor,
+      nodeComponent: getNodeComponent,
       handleNodeHover: isInteractive ? handleNodeHover : undefined,
       handleNodeLeave: isInteractive ? handleNodeLeave : undefined
     })
@@ -609,6 +622,7 @@ var NetworkCanvas = function NetworkCanvas(props) {
       nodeColor = props.nodeColor,
       nodeBorderWidth = props.nodeBorderWidth,
       nodeBorderColor = props.nodeBorderColor,
+      nodeComponent = props.nodeComponent,
       linkThickness = props.linkThickness,
       linkColor = props.linkColor,
       isInteractive = props.isInteractive;
@@ -634,6 +648,7 @@ var NetworkCanvas = function NetworkCanvas(props) {
       links = _useNetwork2[1];
   var theme = core.useTheme();
   var getNodeColor = useNodeColor(nodeColor);
+  var getNodeComponent = useNodeComponent(nodeComponent);
   var getBorderColor = colors.useInheritedColor(nodeBorderColor, theme);
   var getLinkThickness = useLinkThickness(linkThickness);
   var getLinkColor = colors.useInheritedColor(linkColor, theme);
@@ -674,7 +689,7 @@ var NetworkCanvas = function NetworkCanvas(props) {
         }));
       }
     });
-  }, [canvasEl, outerWidth, outerHeight, layers, theme, nodes, links, getNodeColor, nodeBorderWidth, getBorderColor, getLinkThickness, getLinkColor]);
+  }, [canvasEl, outerWidth, outerHeight, layers, theme, nodes, links, getNodeColor, getNodeComponent, nodeBorderWidth, getBorderColor, getLinkThickness, getLinkColor]);
   return React__default.createElement("canvas", {
     ref: canvasEl,
     width: outerWidth * pixelRatio,
@@ -711,4 +726,5 @@ exports.ResponsiveNetworkCanvas = ResponsiveNetworkCanvas;
 exports.useLinkThickness = useLinkThickness;
 exports.useNetwork = useNetwork;
 exports.useNodeColor = useNodeColor;
+exports.useNodeComponent = useNodeComponent;
 //# sourceMappingURL=nivo-network.cjs.js.map
diff --git a/node_modules/@nivo/network/dist/nivo-network.cjs.js.map b/node_modules/@nivo/network/dist/nivo-network.cjs.js.map
index 0bc03b7..ee7d3d9 100644
--- a/node_modules/@nivo/network/dist/nivo-network.cjs.js.map
+++ b/node_modules/@nivo/network/dist/nivo-network.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"nivo-network.cjs.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/props.js","../src/hooks.js","../src/Node.js","../src/AnimatedNodes.js","../src/StaticNodes.js","../src/Link.js","../src/AnimatedLinks.js","../src/StaticLinks.js","../src/NetworkNodeTooltip.js","../src/Network.js","../src/ResponsiveNetwork.js","../src/NetworkCanvas.js","../src/ResponsiveNetworkCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\n\nconst commonPropTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    links: PropTypes.arrayOf(\n        PropTypes.shape({\n            source: PropTypes.string.isRequired,\n            target: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['links', 'nodes']), PropTypes.func])\n    ).isRequired,\n\n    linkDistance: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.number])\n        .isRequired,\n    repulsivity: PropTypes.number.isRequired,\n    distanceMin: PropTypes.number.isRequired,\n    distanceMax: PropTypes.number.isRequired,\n    iterations: PropTypes.number.isRequired,\n\n    nodeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    nodeBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    nodeBorderColor: inheritedColorPropType.isRequired,\n\n    linkThickness: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    linkColor: inheritedColorPropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n}\n\nexport const NetworkPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n    ...motionPropTypes,\n}\n\nexport const NetworkCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    layers: ['links', 'nodes'],\n\n    linkDistance: 30,\n    repulsivity: 10,\n    distanceMin: 1,\n    distanceMax: Infinity,\n    iterations: 90,\n\n    nodeBorderWidth: 0,\n    nodeBorderColor: { from: 'color' },\n\n    linkThickness: 1,\n    linkColor: { from: 'source.color' },\n\n    isInteractive: true,\n}\n\nexport const NetworkDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    role: 'img',\n}\n\nexport const NetworkCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useState, useEffect, useMemo } from 'react'\nimport get from 'lodash/get'\nimport isString from 'lodash/isString'\nimport isNumber from 'lodash/isNumber'\nimport { forceSimulation, forceManyBody, forceCenter, forceLink } from 'd3-force'\n\nconst computeForces = ({ linkDistance, repulsivity, distanceMin, distanceMax, center }) => {\n    let computedLinkDistance\n    if (typeof linkDistance === 'function') {\n        computedLinkDistance = linkDistance\n    } else if (isNumber(linkDistance)) {\n        computedLinkDistance = linkDistance\n    } else if (isString(linkDistance)) {\n        computedLinkDistance = link => get(link, linkDistance)\n    }\n\n    const linkForce = forceLink()\n        .id(d => d.id)\n        .distance(computedLinkDistance)\n\n    const chargeForce = forceManyBody()\n        .strength(-repulsivity)\n        .distanceMin(distanceMin)\n        .distanceMax(distanceMax)\n\n    const centerForce = forceCenter(center[0], center[1])\n\n    return { link: linkForce, charge: chargeForce, center: centerForce }\n}\n\nexport const useNetwork = ({\n    nodes,\n    links,\n    linkDistance,\n    repulsivity,\n    distanceMin,\n    distanceMax,\n    center,\n    iterations,\n}) => {\n    const [currentNodes, setCurrentNodes] = useState([])\n    const [currentLinks, setCurrentLinks] = useState([])\n\n    useEffect(() => {\n        const forces = computeForces({\n            linkDistance,\n            repulsivity,\n            distanceMin,\n            distanceMax,\n            center,\n        })\n\n        const nodesCopy = nodes.map(node => ({ ...node }))\n        const linksCopy = links.map(link => ({\n            id: `${link.source}.${link.target}`,\n            ...link,\n        }))\n\n        const simulation = forceSimulation(nodesCopy)\n            .force('link', forces.link.links(linksCopy))\n            .force('charge', forces.charge)\n            .force('center', forces.center)\n            .stop()\n\n        simulation.tick(iterations)\n\n        setCurrentNodes(nodesCopy)\n        setCurrentLinks(\n            linksCopy.map(link => {\n                link.previousSource = currentNodes.find(n => n.id === link.source.id)\n                link.previousTarget = currentNodes.find(n => n.id === link.target.id)\n\n                return link\n            })\n        )\n\n        return () => {\n            simulation.stop()\n        }\n    }, [\n        nodes,\n        links,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center[0],\n        center[1],\n    ])\n\n    return [currentNodes, currentLinks]\n}\n\nexport const useNodeColor = color =>\n    useMemo(() => {\n        if (typeof color === 'function') return color\n        return () => color\n    }, [color])\n\nexport const useLinkThickness = thickness =>\n    useMemo(() => {\n        if (typeof thickness === 'function') return thickness\n        return () => thickness\n    }, [thickness])\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Node = ({\n    node,\n    x,\n    y,\n    radius,\n    color,\n    borderWidth,\n    borderColor,\n    scale = 1,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    return (\n        <circle\n            transform={`translate(${x},${y}) scale(${scale})`}\n            r={radius}\n            fill={color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            onMouseEnter={event => handleNodeHover(node, event)}\n            onMouseMove={event => handleNodeHover(node, event)}\n            onMouseLeave={handleNodeLeave}\n        />\n    )\n}\n\nNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    radius: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    scale: PropTypes.number,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default memo(Node)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@nivo/core'\nimport Node from './Node'\n\nconst willEnter = ({ style }) => ({\n    x: style.x.val,\n    y: style.y.val,\n    radius: style.radius.val,\n    scale: 0,\n})\n\nconst willLeave = springConfig => ({ style }) => ({\n    x: style.x,\n    y: style.y,\n    radius: style.radius,\n    scale: spring(0, springConfig),\n})\n\nconst AnimatedNodes = ({\n    nodes,\n    color,\n    borderWidth,\n    borderColor,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            willLeave={willLeave(springConfig)}\n            styles={nodes.map(node => ({\n                key: node.id,\n                data: node,\n                style: {\n                    x: spring(node.x, springConfig),\n                    y: spring(node.y, springConfig),\n                    radius: spring(node.radius, springConfig),\n                    scale: spring(1, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: node }) => {\n                        return (\n                            <Node\n                                key={key}\n                                node={node}\n                                x={style.x}\n                                y={style.y}\n                                radius={Math.max(style.radius, 0)}\n                                color={color(node)}\n                                borderWidth={borderWidth}\n                                borderColor={borderColor(node)}\n                                scale={Math.max(style.scale, 0)}\n                                handleNodeHover={handleNodeHover}\n                                handleNodeLeave={handleNodeLeave}\n                            />\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Node from './Node'\n\nconst StaticNodes = ({\n    nodes,\n    color,\n    borderWidth,\n    borderColor,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    return nodes.map(node => {\n        return (\n            <Node\n                key={node.id}\n                node={node}\n                x={node.x}\n                y={node.y}\n                radius={node.radius}\n                color={color(node)}\n                borderWidth={borderWidth}\n                borderColor={borderColor(node)}\n                handleNodeHover={handleNodeHover}\n                handleNodeLeave={handleNodeLeave}\n            />\n        )\n    })\n}\n\nStaticNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ sourceX, sourceY, targetX, targetY, thickness, color }) => {\n    return (\n        <line\n            stroke={color}\n            strokeWidth={thickness}\n            strokeLinecap=\"round\"\n            x1={sourceX}\n            y1={sourceY}\n            x2={targetX}\n            y2={targetY}\n        />\n    )\n}\n\nLink.propTypes = {\n    link: PropTypes.object.isRequired,\n    sourceX: PropTypes.number.isRequired,\n    sourceY: PropTypes.number.isRequired,\n    targetX: PropTypes.number.isRequired,\n    targetY: PropTypes.number.isRequired,\n    thickness: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n}\n\nexport default memo(Link)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@nivo/core'\nimport Link from './Link'\n\nconst willEnter = ({ style, data }) => {\n    const sourceX = data.previousSource ? data.previousSource.x : style.sourceX.val\n    const sourceY = data.previousSource ? data.previousSource.y : style.sourceY.val\n\n    return {\n        sourceX,\n        sourceY,\n        targetX: sourceX,\n        targetY: sourceY,\n    }\n}\n\nconst AnimatedLinks = ({ links, linkThickness, linkColor }) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            styles={links.map(link => ({\n                key: link.id,\n                data: link,\n                style: {\n                    sourceX: spring(link.source.x, springConfig),\n                    sourceY: spring(link.source.y, springConfig),\n                    targetX: spring(link.target.x, springConfig),\n                    targetY: spring(link.target.y, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: link }) => {\n                        return (\n                            <Link\n                                key={key}\n                                link={link}\n                                color={linkColor(link)}\n                                thickness={linkThickness(link)}\n                                sourceX={style.sourceX}\n                                sourceY={style.sourceY}\n                                targetX={style.targetX}\n                                targetY={style.targetY}\n                            />\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedLinks)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Link from './Link'\n\nconst StaticLinks = ({ links, linkThickness, linkColor }) => {\n    return links.map(link => {\n        return (\n            <Link\n                key={link.id}\n                link={link}\n                color={linkColor(link)}\n                thickness={linkThickness(link)}\n                sourceX={link.source.x}\n                sourceY={link.source.y}\n                targetX={link.target.x}\n                targetY={link.target.y}\n            />\n        )\n    })\n}\n\nStaticLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticLinks)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst NetworkNodeTooltip = ({ node, format, tooltip }) => (\n    <BasicTooltip\n        id={node.id}\n        enableChip={true}\n        color={node.color}\n        format={format}\n        renderContent={typeof tooltip === 'function' ? tooltip.bind(null, { ...node }) : null}\n    />\n)\n\nNetworkNodeTooltip.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n    format: PropTypes.func,\n    tooltip: PropTypes.func,\n}\n\nexport default memo(NetworkNodeTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment, useCallback } from 'react'\nimport { withContainer, useDimensions, SvgWrapper, useTheme, useMotionConfig } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { NetworkPropTypes, NetworkDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness } from './hooks'\nimport AnimatedNodes from './AnimatedNodes'\nimport StaticNodes from './StaticNodes'\nimport AnimatedLinks from './AnimatedLinks'\nimport StaticLinks from './StaticLinks'\nimport NetworkNodeTooltip from './NetworkNodeTooltip'\n\nconst Network = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n\n        linkThickness,\n        linkColor,\n        tooltip,\n        isInteractive,\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { animate } = useMotionConfig()\n    const theme = useTheme()\n    const getColor = useNodeColor(nodeColor)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleNodeHover = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(<NetworkNodeTooltip node={node} tooltip={tooltip} />, event)\n        },\n        [showTooltipFromEvent, tooltip]\n    )\n\n    const handleNodeLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const layerById = {\n        links: React.createElement(animate === true ? AnimatedLinks : StaticLinks, {\n            key: 'links',\n            links,\n            linkThickness: getLinkThickness,\n            linkColor: getLinkColor,\n        }),\n        nodes: React.createElement(animate === true ? AnimatedNodes : StaticNodes, {\n            key: 'nodes',\n            nodes,\n            color: getColor,\n            borderWidth: nodeBorderWidth,\n            borderColor: getBorderColor,\n            handleNodeHover: isInteractive ? handleNodeHover : undefined,\n            handleNodeLeave: isInteractive ? handleNodeLeave : undefined,\n        }),\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                nodes,\n                                links,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nNetwork.propTypes = NetworkPropTypes\nNetwork.defaultProps = NetworkDefaultProps\n\nexport default withContainer(Network)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Network from './Network'\n\nconst ResponsiveNetwork = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Network width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetwork\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useRef, useEffect } from 'react'\nimport { withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { NetworkCanvasPropTypes, NetworkCanvasDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness } from './hooks'\n\nconst NetworkCanvas = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n\n        linkThickness,\n        linkColor,\n\n        isInteractive,\n    } = props\n\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const theme = useTheme()\n    const getNodeColor = useNodeColor(nodeColor)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'links') {\n                links.forEach(link => {\n                    ctx.strokeStyle = getLinkColor(link)\n                    ctx.lineWidth = getLinkThickness(link)\n                    ctx.beginPath()\n                    ctx.moveTo(link.source.x, link.source.y)\n                    ctx.lineTo(link.target.x, link.target.y)\n                    ctx.stroke()\n                })\n            } else if (layer === 'nodes') {\n                nodes.forEach(node => {\n                    ctx.fillStyle = getNodeColor(node)\n                    ctx.beginPath()\n                    ctx.arc(node.x, node.y, node.radius, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (nodeBorderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(node)\n                        ctx.lineWidth = nodeBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else if (typeof layer === 'function') {\n                layer(ctx, {\n                    ...props,\n                    nodes,\n                    links,\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        nodes,\n        links,\n        getNodeColor,\n        nodeBorderWidth,\n        getBorderColor,\n        getLinkThickness,\n        getLinkColor,\n    ])\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n        />\n    )\n}\n\nNetworkCanvas.propTypes = NetworkCanvasPropTypes\nNetworkCanvas.defaultProps = NetworkCanvasDefaultProps\n\nexport default withContainer(NetworkCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport NetworkCanvas from './NetworkCanvas'\n\nconst ResponsiveNetworkCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <NetworkCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetworkCanvas\n"],"names":["defineProperty","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","commonPropTypes","nodes","PropTypes","arrayOf","shape","id","string","isRequired","links","source","target","layers","oneOfType","oneOf","func","linkDistance","number","repulsivity","distanceMin","distanceMax","iterations","nodeColor","nodeBorderWidth","nodeBorderColor","inheritedColorPropType","linkThickness","linkColor","isInteractive","bool","NetworkPropTypes","role","motionPropTypes","NetworkCanvasPropTypes","pixelRatio","commonDefaultProps","Infinity","from","NetworkDefaultProps","animate","motionStiffness","motionDamping","NetworkCanvasDefaultProps","global","window","devicePixelRatio","computeForces","center","computedLinkDistance","isNumber","isString","link","get","linkForce","forceLink","d","distance","chargeForce","forceManyBody","strength","centerForce","forceCenter","charge","useNetwork","useState","currentNodes","setCurrentNodes","currentLinks","setCurrentLinks","useEffect","forces","nodesCopy","map","node","linksCopy","simulation","forceSimulation","force","stop","tick","previousSource","find","n","previousTarget","useNodeColor","color","useMemo","useLinkThickness","thickness","Node","x","y","radius","borderWidth","borderColor","scale","handleNodeHover","handleNodeLeave","React","event","memo","willEnter","style","val","willLeave","springConfig","spring","AnimatedNodes","useMotionConfig","TransitionMotion","key","data","interpolatedStyles","Math","max","StaticNodes","Link","sourceX","sourceY","targetX","targetY","AnimatedLinks","StaticLinks","NetworkNodeTooltip","format","tooltip","BasicTooltip","bind","Network","props","width","height","partialMargin","margin","rawNodes","rawLinks","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","theme","useTheme","getColor","getBorderColor","useInheritedColor","getLinkThickness","getLinkColor","useTooltip","showTooltipFromEvent","hideTooltip","useCallback","layerById","createElement","undefined","SvgWrapper","layer","i","Fragment","defaultProps","withContainer","ResponsiveNetwork","ResponsiveWrapper","NetworkCanvas","canvasEl","useRef","getNodeColor","current","ctx","getContext","fillStyle","background","fillRect","translate","left","top","forEach","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","arc","PI","fill","cursor","ResponsiveNetworkCanvas"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"nivo-network.cjs.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/Node.js","../src/props.js","../src/hooks.js","../src/AnimatedNodes.js","../src/StaticNodes.js","../src/Link.js","../src/AnimatedLinks.js","../src/StaticLinks.js","../src/NetworkNodeTooltip.js","../src/Network.js","../src/ResponsiveNetwork.js","../src/NetworkCanvas.js","../src/ResponsiveNetworkCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Node = ({\n    node,\n    x,\n    y,\n    radius,\n    color,\n    borderWidth,\n    borderColor,\n    scale = 1,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    return (\n        <circle\n            transform={`translate(${x},${y}) scale(${scale})`}\n            r={radius}\n            fill={color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            onMouseEnter={event => handleNodeHover(node, event)}\n            onMouseMove={event => handleNodeHover(node, event)}\n            onMouseLeave={handleNodeLeave}\n        />\n    )\n}\n\nNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    radius: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    scale: PropTypes.number,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default Node\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport Node from './Node'\n\nconst commonPropTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    links: PropTypes.arrayOf(\n        PropTypes.shape({\n            source: PropTypes.string.isRequired,\n            target: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['links', 'nodes']), PropTypes.func])\n    ).isRequired,\n\n    linkDistance: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.number])\n        .isRequired,\n    repulsivity: PropTypes.number.isRequired,\n    distanceMin: PropTypes.number.isRequired,\n    distanceMax: PropTypes.number.isRequired,\n    iterations: PropTypes.number.isRequired,\n\n    nodeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    nodeBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    nodeBorderColor: inheritedColorPropType.isRequired,\n    nodeComponent: PropTypes.func.isRequired,\n\n    linkThickness: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    linkColor: inheritedColorPropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n}\n\nexport const NetworkPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n    ...motionPropTypes,\n}\n\nexport const NetworkCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    layers: ['links', 'nodes'],\n\n    linkDistance: 30,\n    repulsivity: 10,\n    distanceMin: 1,\n    distanceMax: Infinity,\n    iterations: 90,\n\n    nodeComponent: Node,\n    nodeBorderWidth: 0,\n    nodeBorderColor: { from: 'color' },\n\n    linkThickness: 1,\n    linkColor: { from: 'source.color' },\n\n    isInteractive: true,\n}\n\nexport const NetworkDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    role: 'img',\n}\n\nexport const NetworkCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useState, useEffect, useMemo } from 'react'\nimport get from 'lodash/get'\nimport isString from 'lodash/isString'\nimport isNumber from 'lodash/isNumber'\nimport { forceSimulation, forceManyBody, forceCenter, forceLink } from 'd3-force'\n\nconst computeForces = ({ linkDistance, repulsivity, distanceMin, distanceMax, center }) => {\n    let computedLinkDistance\n    if (typeof linkDistance === 'function') {\n        computedLinkDistance = linkDistance\n    } else if (isNumber(linkDistance)) {\n        computedLinkDistance = linkDistance\n    } else if (isString(linkDistance)) {\n        computedLinkDistance = link => get(link, linkDistance)\n    }\n\n    const linkForce = forceLink()\n        .id(d => d.id)\n        .distance(computedLinkDistance)\n\n    const chargeForce = forceManyBody()\n        .strength(-repulsivity)\n        .distanceMin(distanceMin)\n        .distanceMax(distanceMax)\n\n    const centerForce = forceCenter(center[0], center[1])\n\n    return { link: linkForce, charge: chargeForce, center: centerForce }\n}\n\nexport const useNetwork = ({\n    nodes,\n    links,\n    linkDistance,\n    repulsivity,\n    distanceMin,\n    distanceMax,\n    center,\n    iterations,\n}) => {\n    const [currentNodes, setCurrentNodes] = useState([])\n    const [currentLinks, setCurrentLinks] = useState([])\n\n    useEffect(() => {\n        const forces = computeForces({\n            linkDistance,\n            repulsivity,\n            distanceMin,\n            distanceMax,\n            center,\n        })\n\n        const nodesCopy = nodes.map(node => ({ ...node }))\n        const linksCopy = links.map(link => ({\n            id: `${link.source}.${link.target}`,\n            ...link,\n        }))\n\n        const simulation = forceSimulation(nodesCopy)\n            .force('link', forces.link.links(linksCopy))\n            .force('charge', forces.charge)\n            .force('center', forces.center)\n            .stop()\n\n        simulation.tick(iterations)\n\n        setCurrentNodes(nodesCopy)\n        setCurrentLinks(\n            linksCopy.map(link => {\n                link.previousSource = currentNodes.find(n => n.id === link.source.id)\n                link.previousTarget = currentNodes.find(n => n.id === link.target.id)\n\n                return link\n            })\n        )\n\n        return () => {\n            simulation.stop()\n        }\n    }, [\n        nodes,\n        links,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center[0],\n        center[1],\n    ])\n\n    return [currentNodes, currentLinks]\n}\n\nexport const useNodeColor = color =>\n    useMemo(() => {\n        if (typeof color === 'function') return color\n        return () => color\n    }, [color])\n\nexport const useNodeComponent = nodeComponent =>\n    useMemo(() => {\n        if (typeof nodeComponent === 'function') return nodeComponent\n        return () => nodeComponent\n    }, [nodeComponent])\n\nexport const useLinkThickness = thickness =>\n    useMemo(() => {\n        if (typeof thickness === 'function') return thickness\n        return () => thickness\n    }, [thickness])\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@nivo/core'\n\nconst willEnter = ({ style }) => ({\n    x: style.x.val,\n    y: style.y.val,\n    radius: style.radius.val,\n    scale: 0,\n})\n\nconst willLeave = springConfig => ({ style }) => ({\n    x: style.x,\n    y: style.y,\n    radius: style.radius,\n    scale: spring(0, springConfig),\n})\n\nconst AnimatedNodes = ({\n    nodes,\n    color,\n    borderWidth,\n    borderColor,\n    handleNodeHover,\n    handleNodeLeave,\n    nodeComponent,\n}) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            willLeave={willLeave(springConfig)}\n            styles={nodes.map(node => ({\n                key: node.id,\n                data: node,\n                style: {\n                    x: spring(node.x, springConfig),\n                    y: spring(node.y, springConfig),\n                    radius: spring(node.radius, springConfig),\n                    scale: spring(1, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: node }) => {\n                        return React.createElement(nodeComponent, {\n                            key: key,\n                            node: node,\n                            x: style.x,\n                            y: style.y,\n                            radius: Math.max(style.radius, 0),\n                            color: color(node),\n                            borderWidth: borderWidth,\n                            borderColor: borderColor(node),\n                            handleNodeHover: handleNodeHover,\n                            handleNodeLeave: handleNodeLeave,\n                        })\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n    nodeComponent: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst StaticNodes = ({\n    nodes,\n    color,\n    borderWidth,\n    borderColor,\n    handleNodeHover,\n    handleNodeLeave,\n    nodeComponent,\n}) => {\n    return nodes.map(node => {\n        return React.createElement(nodeComponent, {\n            key: node.id,\n            node: node,\n            x: node.x,\n            y: node.y,\n            radius: node.radius,\n            color: color(node),\n            borderWidth: borderWidth,\n            borderColor: borderColor(node),\n            handleNodeHover: handleNodeHover,\n            handleNodeLeave: handleNodeLeave,\n        })\n    })\n}\n\nStaticNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n    nodeComponent: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ sourceX, sourceY, targetX, targetY, thickness, color }) => {\n    return (\n        <line\n            stroke={color}\n            strokeWidth={thickness}\n            strokeLinecap=\"round\"\n            x1={sourceX}\n            y1={sourceY}\n            x2={targetX}\n            y2={targetY}\n        />\n    )\n}\n\nLink.propTypes = {\n    link: PropTypes.object.isRequired,\n    sourceX: PropTypes.number.isRequired,\n    sourceY: PropTypes.number.isRequired,\n    targetX: PropTypes.number.isRequired,\n    targetY: PropTypes.number.isRequired,\n    thickness: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n}\n\nexport default memo(Link)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@nivo/core'\nimport Link from './Link'\n\nconst willEnter = ({ style, data }) => {\n    const sourceX = data.previousSource ? data.previousSource.x : style.sourceX.val\n    const sourceY = data.previousSource ? data.previousSource.y : style.sourceY.val\n\n    return {\n        sourceX,\n        sourceY,\n        targetX: sourceX,\n        targetY: sourceY,\n    }\n}\n\nconst AnimatedLinks = ({ links, linkThickness, linkColor }) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            styles={links.map(link => ({\n                key: link.id,\n                data: link,\n                style: {\n                    sourceX: spring(link.source.x, springConfig),\n                    sourceY: spring(link.source.y, springConfig),\n                    targetX: spring(link.target.x, springConfig),\n                    targetY: spring(link.target.y, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: link }) => {\n                        return (\n                            <Link\n                                key={key}\n                                link={link}\n                                color={linkColor(link)}\n                                thickness={linkThickness(link)}\n                                sourceX={style.sourceX}\n                                sourceY={style.sourceY}\n                                targetX={style.targetX}\n                                targetY={style.targetY}\n                            />\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedLinks)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Link from './Link'\n\nconst StaticLinks = ({ links, linkThickness, linkColor }) => {\n    return links.map(link => {\n        return (\n            <Link\n                key={link.id}\n                link={link}\n                color={linkColor(link)}\n                thickness={linkThickness(link)}\n                sourceX={link.source.x}\n                sourceY={link.source.y}\n                targetX={link.target.x}\n                targetY={link.target.y}\n            />\n        )\n    })\n}\n\nStaticLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticLinks)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst NetworkNodeTooltip = ({ node, format, tooltip }) => (\n    <BasicTooltip\n        id={node.id}\n        enableChip={true}\n        color={node.color}\n        format={format}\n        renderContent={typeof tooltip === 'function' ? tooltip.bind(null, { ...node }) : null}\n    />\n)\n\nNetworkNodeTooltip.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n    format: PropTypes.func,\n    tooltip: PropTypes.func,\n}\n\nexport default memo(NetworkNodeTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment, useCallback } from 'react'\nimport { withContainer, useDimensions, SvgWrapper, useTheme, useMotionConfig } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { NetworkPropTypes, NetworkDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness, useNodeComponent } from './hooks'\nimport AnimatedNodes from './AnimatedNodes'\nimport StaticNodes from './StaticNodes'\nimport AnimatedLinks from './AnimatedLinks'\nimport StaticLinks from './StaticLinks'\nimport NetworkNodeTooltip from './NetworkNodeTooltip'\n\nconst Network = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n        nodeComponent,\n\n        linkThickness,\n        linkColor,\n        tooltip,\n        isInteractive,\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { animate } = useMotionConfig()\n    const theme = useTheme()\n    const getColor = useNodeColor(nodeColor)\n    const getNodeComponent = useNodeComponent(nodeComponent)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleNodeHover = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(<NetworkNodeTooltip node={node} tooltip={tooltip} />, event)\n        },\n        [showTooltipFromEvent, tooltip]\n    )\n\n    const handleNodeLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const layerById = {\n        links: React.createElement(animate === true ? AnimatedLinks : StaticLinks, {\n            key: 'links',\n            links,\n            linkThickness: getLinkThickness,\n            linkColor: getLinkColor,\n        }),\n        nodes: React.createElement(animate === true ? AnimatedNodes : StaticNodes, {\n            key: 'nodes',\n            nodes,\n            color: getColor,\n            borderWidth: nodeBorderWidth,\n            borderColor: getBorderColor,\n            nodeComponent: getNodeComponent,\n            handleNodeHover: isInteractive ? handleNodeHover : undefined,\n            handleNodeLeave: isInteractive ? handleNodeLeave : undefined,\n        }),\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                nodes,\n                                links,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nNetwork.propTypes = NetworkPropTypes\nNetwork.defaultProps = NetworkDefaultProps\n\nexport default withContainer(Network)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Network from './Network'\n\nconst ResponsiveNetwork = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Network width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetwork\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useRef, useEffect } from 'react'\nimport { withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { NetworkCanvasPropTypes, NetworkCanvasDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness, useNodeComponent } from './hooks'\n\nconst NetworkCanvas = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n        nodeComponent,\n\n        linkThickness,\n        linkColor,\n\n        isInteractive,\n    } = props\n\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const theme = useTheme()\n    const getNodeColor = useNodeColor(nodeColor)\n    const getNodeComponent = useNodeComponent(nodeComponent)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'links') {\n                links.forEach(link => {\n                    ctx.strokeStyle = getLinkColor(link)\n                    ctx.lineWidth = getLinkThickness(link)\n                    ctx.beginPath()\n                    ctx.moveTo(link.source.x, link.source.y)\n                    ctx.lineTo(link.target.x, link.target.y)\n                    ctx.stroke()\n                })\n            } else if (layer === 'nodes') {\n                nodes.forEach(node => {\n                    ctx.fillStyle = getNodeColor(node)\n                    ctx.beginPath()\n                    ctx.arc(node.x, node.y, node.radius, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (nodeBorderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(node)\n                        ctx.lineWidth = nodeBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else if (typeof layer === 'function') {\n                layer(ctx, {\n                    ...props,\n                    nodes,\n                    links,\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        nodes,\n        links,\n        getNodeColor,\n        getNodeComponent,\n        nodeBorderWidth,\n        getBorderColor,\n        getLinkThickness,\n        getLinkColor,\n    ])\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n        />\n    )\n}\n\nNetworkCanvas.propTypes = NetworkCanvasPropTypes\nNetworkCanvas.defaultProps = NetworkCanvasDefaultProps\n\nexport default withContainer(NetworkCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport NetworkCanvas from './NetworkCanvas'\n\nconst ResponsiveNetworkCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <NetworkCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetworkCanvas\n"],"names":["defineProperty","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","Node","node","x","y","radius","color","borderWidth","borderColor","scale","handleNodeHover","handleNodeLeave","React","event","commonPropTypes","nodes","PropTypes","arrayOf","shape","id","string","isRequired","links","source","target","layers","oneOfType","oneOf","func","linkDistance","number","repulsivity","distanceMin","distanceMax","iterations","nodeColor","nodeBorderWidth","nodeBorderColor","inheritedColorPropType","nodeComponent","linkThickness","linkColor","isInteractive","bool","NetworkPropTypes","role","motionPropTypes","NetworkCanvasPropTypes","pixelRatio","commonDefaultProps","Infinity","from","NetworkDefaultProps","animate","motionStiffness","motionDamping","NetworkCanvasDefaultProps","global","window","devicePixelRatio","computeForces","center","computedLinkDistance","isNumber","isString","link","get","linkForce","forceLink","d","distance","chargeForce","forceManyBody","strength","centerForce","forceCenter","charge","useNetwork","useState","currentNodes","setCurrentNodes","currentLinks","setCurrentLinks","useEffect","forces","nodesCopy","map","linksCopy","simulation","forceSimulation","force","stop","tick","previousSource","find","n","previousTarget","useNodeColor","useMemo","useNodeComponent","useLinkThickness","thickness","willEnter","style","val","willLeave","springConfig","spring","AnimatedNodes","useMotionConfig","TransitionMotion","key","data","interpolatedStyles","createElement","Math","max","memo","StaticNodes","Link","sourceX","sourceY","targetX","targetY","AnimatedLinks","StaticLinks","NetworkNodeTooltip","format","tooltip","BasicTooltip","bind","Network","props","width","height","partialMargin","margin","rawNodes","rawLinks","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","theme","useTheme","getColor","getNodeComponent","getBorderColor","useInheritedColor","getLinkThickness","getLinkColor","useTooltip","showTooltipFromEvent","hideTooltip","useCallback","layerById","undefined","SvgWrapper","layer","i","Fragment","defaultProps","withContainer","ResponsiveNetwork","ResponsiveWrapper","NetworkCanvas","canvasEl","useRef","getNodeColor","current","ctx","getContext","fillStyle","background","fillRect","translate","left","top","forEach","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","arc","PI","fill","cursor","ResponsiveNetworkCanvas"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@nivo/network/dist/nivo-network.es.js b/node_modules/@nivo/network/dist/nivo-network.es.js
index 39fe61f..6d74d74 100644
--- a/node_modules/@nivo/network/dist/nivo-network.es.js
+++ b/node_modules/@nivo/network/dist/nivo-network.es.js
@@ -105,6 +105,34 @@ function _slicedToArray(arr, i) {
   return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
 }
 
+var Node = function Node(_ref) {
+  var node = _ref.node,
+      x = _ref.x,
+      y = _ref.y,
+      radius = _ref.radius,
+      color = _ref.color,
+      borderWidth = _ref.borderWidth,
+      borderColor = _ref.borderColor,
+      _ref$scale = _ref.scale,
+      scale = _ref$scale === void 0 ? 1 : _ref$scale,
+      handleNodeHover = _ref.handleNodeHover,
+      handleNodeLeave = _ref.handleNodeLeave;
+  return React.createElement("circle", {
+    transform: "translate(".concat(x, ",").concat(y, ") scale(").concat(scale, ")"),
+    r: radius,
+    fill: color,
+    strokeWidth: borderWidth,
+    stroke: borderColor,
+    onMouseEnter: function onMouseEnter(event) {
+      return handleNodeHover(node, event);
+    },
+    onMouseMove: function onMouseMove(event) {
+      return handleNodeHover(node, event);
+    },
+    onMouseLeave: handleNodeLeave
+  });
+};
+
 var commonPropTypes = {
   nodes: PropTypes.arrayOf(PropTypes.shape({
     id: PropTypes.string.isRequired
@@ -122,6 +150,7 @@ var commonPropTypes = {
   nodeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,
   nodeBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,
   nodeBorderColor: inheritedColorPropType.isRequired,
+  nodeComponent: PropTypes.func.isRequired,
   linkThickness: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,
   linkColor: inheritedColorPropType.isRequired,
   isInteractive: PropTypes.bool.isRequired
@@ -139,6 +168,7 @@ var commonDefaultProps = {
   distanceMin: 1,
   distanceMax: Infinity,
   iterations: 90,
+  nodeComponent: Node,
   nodeBorderWidth: 0,
   nodeBorderColor: {
     from: 'color'
@@ -245,6 +275,14 @@ var useNodeColor = function useNodeColor(color) {
     };
   }, [color]);
 };
+var useNodeComponent = function useNodeComponent(nodeComponent) {
+  return useMemo(function () {
+    if (typeof nodeComponent === 'function') return nodeComponent;
+    return function () {
+      return nodeComponent;
+    };
+  }, [nodeComponent]);
+};
 var useLinkThickness = function useLinkThickness(thickness) {
   return useMemo(function () {
     if (typeof thickness === 'function') return thickness;
@@ -254,35 +292,6 @@ var useLinkThickness = function useLinkThickness(thickness) {
   }, [thickness]);
 };
 
-var Node = function Node(_ref) {
-  var node = _ref.node,
-      x = _ref.x,
-      y = _ref.y,
-      radius = _ref.radius,
-      color = _ref.color,
-      borderWidth = _ref.borderWidth,
-      borderColor = _ref.borderColor,
-      _ref$scale = _ref.scale,
-      scale = _ref$scale === void 0 ? 1 : _ref$scale,
-      handleNodeHover = _ref.handleNodeHover,
-      handleNodeLeave = _ref.handleNodeLeave;
-  return React.createElement("circle", {
-    transform: "translate(".concat(x, ",").concat(y, ") scale(").concat(scale, ")"),
-    r: radius,
-    fill: color,
-    strokeWidth: borderWidth,
-    stroke: borderColor,
-    onMouseEnter: function onMouseEnter(event) {
-      return handleNodeHover(node, event);
-    },
-    onMouseMove: function onMouseMove(event) {
-      return handleNodeHover(node, event);
-    },
-    onMouseLeave: handleNodeLeave
-  });
-};
-var Node$1 = memo(Node);
-
 var willEnter = function willEnter(_ref) {
   var style = _ref.style;
   return {
@@ -309,7 +318,8 @@ var AnimatedNodes = function AnimatedNodes(_ref3) {
       borderWidth = _ref3.borderWidth,
       borderColor = _ref3.borderColor,
       handleNodeHover = _ref3.handleNodeHover,
-      handleNodeLeave = _ref3.handleNodeLeave;
+      handleNodeLeave = _ref3.handleNodeLeave,
+      nodeComponent = _ref3.nodeComponent;
   var _useMotionConfig = useMotionConfig(),
       springConfig = _useMotionConfig.springConfig;
   return React.createElement(TransitionMotion, {
@@ -332,7 +342,7 @@ var AnimatedNodes = function AnimatedNodes(_ref3) {
       var key = _ref4.key,
           style = _ref4.style,
           node = _ref4.data;
-      return React.createElement(Node$1, {
+      return React.createElement(nodeComponent, {
         key: key,
         node: node,
         x: style.x,
@@ -341,7 +351,6 @@ var AnimatedNodes = function AnimatedNodes(_ref3) {
         color: color(node),
         borderWidth: borderWidth,
         borderColor: borderColor(node),
-        scale: Math.max(style.scale, 0),
         handleNodeHover: handleNodeHover,
         handleNodeLeave: handleNodeLeave
       });
@@ -356,9 +365,10 @@ var StaticNodes = function StaticNodes(_ref) {
       borderWidth = _ref.borderWidth,
       borderColor = _ref.borderColor,
       handleNodeHover = _ref.handleNodeHover,
-      handleNodeLeave = _ref.handleNodeLeave;
+      handleNodeLeave = _ref.handleNodeLeave,
+      nodeComponent = _ref.nodeComponent;
   return nodes.map(function (node) {
-    return React.createElement(Node$1, {
+    return React.createElement(nodeComponent, {
       key: node.id,
       node: node,
       x: node.x,
@@ -493,6 +503,7 @@ var Network = function Network(props) {
       nodeColor = props.nodeColor,
       nodeBorderWidth = props.nodeBorderWidth,
       nodeBorderColor = props.nodeBorderColor,
+      nodeComponent = props.nodeComponent,
       linkThickness = props.linkThickness,
       linkColor = props.linkColor,
       tooltip = props.tooltip,
@@ -508,6 +519,7 @@ var Network = function Network(props) {
       animate = _useMotionConfig.animate;
   var theme = useTheme();
   var getColor = useNodeColor(nodeColor);
+  var getNodeComponent = useNodeComponent(nodeComponent);
   var getBorderColor = useInheritedColor(nodeBorderColor, theme);
   var getLinkThickness = useLinkThickness(linkThickness);
   var getLinkColor = useInheritedColor(linkColor, theme);
@@ -549,6 +561,7 @@ var Network = function Network(props) {
       color: getColor,
       borderWidth: nodeBorderWidth,
       borderColor: getBorderColor,
+      nodeComponent: getNodeComponent,
       handleNodeHover: isInteractive ? handleNodeHover : undefined,
       handleNodeLeave: isInteractive ? handleNodeLeave : undefined
     })
@@ -602,6 +615,7 @@ var NetworkCanvas = function NetworkCanvas(props) {
       nodeColor = props.nodeColor,
       nodeBorderWidth = props.nodeBorderWidth,
       nodeBorderColor = props.nodeBorderColor,
+      nodeComponent = props.nodeComponent,
       linkThickness = props.linkThickness,
       linkColor = props.linkColor,
       isInteractive = props.isInteractive;
@@ -627,6 +641,7 @@ var NetworkCanvas = function NetworkCanvas(props) {
       links = _useNetwork2[1];
   var theme = useTheme();
   var getNodeColor = useNodeColor(nodeColor);
+  var getNodeComponent = useNodeComponent(nodeComponent);
   var getBorderColor = useInheritedColor(nodeBorderColor, theme);
   var getLinkThickness = useLinkThickness(linkThickness);
   var getLinkColor = useInheritedColor(linkColor, theme);
@@ -667,7 +682,7 @@ var NetworkCanvas = function NetworkCanvas(props) {
         }));
       }
     });
-  }, [canvasEl, outerWidth, outerHeight, layers, theme, nodes, links, getNodeColor, nodeBorderWidth, getBorderColor, getLinkThickness, getLinkColor]);
+  }, [canvasEl, outerWidth, outerHeight, layers, theme, nodes, links, getNodeColor, getNodeComponent, nodeBorderWidth, getBorderColor, getLinkThickness, getLinkColor]);
   return React.createElement("canvas", {
     ref: canvasEl,
     width: outerWidth * pixelRatio,
@@ -693,5 +708,5 @@ var ResponsiveNetworkCanvas = function ResponsiveNetworkCanvas(props) {
   });
 };
 
-export { Network$1 as Network, NetworkCanvas$1 as NetworkCanvas, NetworkCanvasDefaultProps, NetworkCanvasPropTypes, NetworkDefaultProps, NetworkPropTypes, ResponsiveNetwork, ResponsiveNetworkCanvas, useLinkThickness, useNetwork, useNodeColor };
+export { Network$1 as Network, NetworkCanvas$1 as NetworkCanvas, NetworkCanvasDefaultProps, NetworkCanvasPropTypes, NetworkDefaultProps, NetworkPropTypes, ResponsiveNetwork, ResponsiveNetworkCanvas, useLinkThickness, useNetwork, useNodeColor, useNodeComponent };
 //# sourceMappingURL=nivo-network.es.js.map
diff --git a/node_modules/@nivo/network/dist/nivo-network.es.js.map b/node_modules/@nivo/network/dist/nivo-network.es.js.map
index e08c4c8..eb58ce1 100644
--- a/node_modules/@nivo/network/dist/nivo-network.es.js.map
+++ b/node_modules/@nivo/network/dist/nivo-network.es.js.map
@@ -1 +1 @@
-{"version":3,"file":"nivo-network.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/props.js","../src/hooks.js","../src/Node.js","../src/AnimatedNodes.js","../src/StaticNodes.js","../src/Link.js","../src/AnimatedLinks.js","../src/StaticLinks.js","../src/NetworkNodeTooltip.js","../src/Network.js","../src/ResponsiveNetwork.js","../src/NetworkCanvas.js","../src/ResponsiveNetworkCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\n\nconst commonPropTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    links: PropTypes.arrayOf(\n        PropTypes.shape({\n            source: PropTypes.string.isRequired,\n            target: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['links', 'nodes']), PropTypes.func])\n    ).isRequired,\n\n    linkDistance: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.number])\n        .isRequired,\n    repulsivity: PropTypes.number.isRequired,\n    distanceMin: PropTypes.number.isRequired,\n    distanceMax: PropTypes.number.isRequired,\n    iterations: PropTypes.number.isRequired,\n\n    nodeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    nodeBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    nodeBorderColor: inheritedColorPropType.isRequired,\n\n    linkThickness: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    linkColor: inheritedColorPropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n}\n\nexport const NetworkPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n    ...motionPropTypes,\n}\n\nexport const NetworkCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    layers: ['links', 'nodes'],\n\n    linkDistance: 30,\n    repulsivity: 10,\n    distanceMin: 1,\n    distanceMax: Infinity,\n    iterations: 90,\n\n    nodeBorderWidth: 0,\n    nodeBorderColor: { from: 'color' },\n\n    linkThickness: 1,\n    linkColor: { from: 'source.color' },\n\n    isInteractive: true,\n}\n\nexport const NetworkDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    role: 'img',\n}\n\nexport const NetworkCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useState, useEffect, useMemo } from 'react'\nimport get from 'lodash/get'\nimport isString from 'lodash/isString'\nimport isNumber from 'lodash/isNumber'\nimport { forceSimulation, forceManyBody, forceCenter, forceLink } from 'd3-force'\n\nconst computeForces = ({ linkDistance, repulsivity, distanceMin, distanceMax, center }) => {\n    let computedLinkDistance\n    if (typeof linkDistance === 'function') {\n        computedLinkDistance = linkDistance\n    } else if (isNumber(linkDistance)) {\n        computedLinkDistance = linkDistance\n    } else if (isString(linkDistance)) {\n        computedLinkDistance = link => get(link, linkDistance)\n    }\n\n    const linkForce = forceLink()\n        .id(d => d.id)\n        .distance(computedLinkDistance)\n\n    const chargeForce = forceManyBody()\n        .strength(-repulsivity)\n        .distanceMin(distanceMin)\n        .distanceMax(distanceMax)\n\n    const centerForce = forceCenter(center[0], center[1])\n\n    return { link: linkForce, charge: chargeForce, center: centerForce }\n}\n\nexport const useNetwork = ({\n    nodes,\n    links,\n    linkDistance,\n    repulsivity,\n    distanceMin,\n    distanceMax,\n    center,\n    iterations,\n}) => {\n    const [currentNodes, setCurrentNodes] = useState([])\n    const [currentLinks, setCurrentLinks] = useState([])\n\n    useEffect(() => {\n        const forces = computeForces({\n            linkDistance,\n            repulsivity,\n            distanceMin,\n            distanceMax,\n            center,\n        })\n\n        const nodesCopy = nodes.map(node => ({ ...node }))\n        const linksCopy = links.map(link => ({\n            id: `${link.source}.${link.target}`,\n            ...link,\n        }))\n\n        const simulation = forceSimulation(nodesCopy)\n            .force('link', forces.link.links(linksCopy))\n            .force('charge', forces.charge)\n            .force('center', forces.center)\n            .stop()\n\n        simulation.tick(iterations)\n\n        setCurrentNodes(nodesCopy)\n        setCurrentLinks(\n            linksCopy.map(link => {\n                link.previousSource = currentNodes.find(n => n.id === link.source.id)\n                link.previousTarget = currentNodes.find(n => n.id === link.target.id)\n\n                return link\n            })\n        )\n\n        return () => {\n            simulation.stop()\n        }\n    }, [\n        nodes,\n        links,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center[0],\n        center[1],\n    ])\n\n    return [currentNodes, currentLinks]\n}\n\nexport const useNodeColor = color =>\n    useMemo(() => {\n        if (typeof color === 'function') return color\n        return () => color\n    }, [color])\n\nexport const useLinkThickness = thickness =>\n    useMemo(() => {\n        if (typeof thickness === 'function') return thickness\n        return () => thickness\n    }, [thickness])\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Node = ({\n    node,\n    x,\n    y,\n    radius,\n    color,\n    borderWidth,\n    borderColor,\n    scale = 1,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    return (\n        <circle\n            transform={`translate(${x},${y}) scale(${scale})`}\n            r={radius}\n            fill={color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            onMouseEnter={event => handleNodeHover(node, event)}\n            onMouseMove={event => handleNodeHover(node, event)}\n            onMouseLeave={handleNodeLeave}\n        />\n    )\n}\n\nNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    radius: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    scale: PropTypes.number,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default memo(Node)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@nivo/core'\nimport Node from './Node'\n\nconst willEnter = ({ style }) => ({\n    x: style.x.val,\n    y: style.y.val,\n    radius: style.radius.val,\n    scale: 0,\n})\n\nconst willLeave = springConfig => ({ style }) => ({\n    x: style.x,\n    y: style.y,\n    radius: style.radius,\n    scale: spring(0, springConfig),\n})\n\nconst AnimatedNodes = ({\n    nodes,\n    color,\n    borderWidth,\n    borderColor,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            willLeave={willLeave(springConfig)}\n            styles={nodes.map(node => ({\n                key: node.id,\n                data: node,\n                style: {\n                    x: spring(node.x, springConfig),\n                    y: spring(node.y, springConfig),\n                    radius: spring(node.radius, springConfig),\n                    scale: spring(1, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: node }) => {\n                        return (\n                            <Node\n                                key={key}\n                                node={node}\n                                x={style.x}\n                                y={style.y}\n                                radius={Math.max(style.radius, 0)}\n                                color={color(node)}\n                                borderWidth={borderWidth}\n                                borderColor={borderColor(node)}\n                                scale={Math.max(style.scale, 0)}\n                                handleNodeHover={handleNodeHover}\n                                handleNodeLeave={handleNodeLeave}\n                            />\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Node from './Node'\n\nconst StaticNodes = ({\n    nodes,\n    color,\n    borderWidth,\n    borderColor,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    return nodes.map(node => {\n        return (\n            <Node\n                key={node.id}\n                node={node}\n                x={node.x}\n                y={node.y}\n                radius={node.radius}\n                color={color(node)}\n                borderWidth={borderWidth}\n                borderColor={borderColor(node)}\n                handleNodeHover={handleNodeHover}\n                handleNodeLeave={handleNodeLeave}\n            />\n        )\n    })\n}\n\nStaticNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ sourceX, sourceY, targetX, targetY, thickness, color }) => {\n    return (\n        <line\n            stroke={color}\n            strokeWidth={thickness}\n            strokeLinecap=\"round\"\n            x1={sourceX}\n            y1={sourceY}\n            x2={targetX}\n            y2={targetY}\n        />\n    )\n}\n\nLink.propTypes = {\n    link: PropTypes.object.isRequired,\n    sourceX: PropTypes.number.isRequired,\n    sourceY: PropTypes.number.isRequired,\n    targetX: PropTypes.number.isRequired,\n    targetY: PropTypes.number.isRequired,\n    thickness: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n}\n\nexport default memo(Link)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@nivo/core'\nimport Link from './Link'\n\nconst willEnter = ({ style, data }) => {\n    const sourceX = data.previousSource ? data.previousSource.x : style.sourceX.val\n    const sourceY = data.previousSource ? data.previousSource.y : style.sourceY.val\n\n    return {\n        sourceX,\n        sourceY,\n        targetX: sourceX,\n        targetY: sourceY,\n    }\n}\n\nconst AnimatedLinks = ({ links, linkThickness, linkColor }) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            styles={links.map(link => ({\n                key: link.id,\n                data: link,\n                style: {\n                    sourceX: spring(link.source.x, springConfig),\n                    sourceY: spring(link.source.y, springConfig),\n                    targetX: spring(link.target.x, springConfig),\n                    targetY: spring(link.target.y, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: link }) => {\n                        return (\n                            <Link\n                                key={key}\n                                link={link}\n                                color={linkColor(link)}\n                                thickness={linkThickness(link)}\n                                sourceX={style.sourceX}\n                                sourceY={style.sourceY}\n                                targetX={style.targetX}\n                                targetY={style.targetY}\n                            />\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedLinks)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Link from './Link'\n\nconst StaticLinks = ({ links, linkThickness, linkColor }) => {\n    return links.map(link => {\n        return (\n            <Link\n                key={link.id}\n                link={link}\n                color={linkColor(link)}\n                thickness={linkThickness(link)}\n                sourceX={link.source.x}\n                sourceY={link.source.y}\n                targetX={link.target.x}\n                targetY={link.target.y}\n            />\n        )\n    })\n}\n\nStaticLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticLinks)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst NetworkNodeTooltip = ({ node, format, tooltip }) => (\n    <BasicTooltip\n        id={node.id}\n        enableChip={true}\n        color={node.color}\n        format={format}\n        renderContent={typeof tooltip === 'function' ? tooltip.bind(null, { ...node }) : null}\n    />\n)\n\nNetworkNodeTooltip.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n    format: PropTypes.func,\n    tooltip: PropTypes.func,\n}\n\nexport default memo(NetworkNodeTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment, useCallback } from 'react'\nimport { withContainer, useDimensions, SvgWrapper, useTheme, useMotionConfig } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { NetworkPropTypes, NetworkDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness } from './hooks'\nimport AnimatedNodes from './AnimatedNodes'\nimport StaticNodes from './StaticNodes'\nimport AnimatedLinks from './AnimatedLinks'\nimport StaticLinks from './StaticLinks'\nimport NetworkNodeTooltip from './NetworkNodeTooltip'\n\nconst Network = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n\n        linkThickness,\n        linkColor,\n        tooltip,\n        isInteractive,\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { animate } = useMotionConfig()\n    const theme = useTheme()\n    const getColor = useNodeColor(nodeColor)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleNodeHover = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(<NetworkNodeTooltip node={node} tooltip={tooltip} />, event)\n        },\n        [showTooltipFromEvent, tooltip]\n    )\n\n    const handleNodeLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const layerById = {\n        links: React.createElement(animate === true ? AnimatedLinks : StaticLinks, {\n            key: 'links',\n            links,\n            linkThickness: getLinkThickness,\n            linkColor: getLinkColor,\n        }),\n        nodes: React.createElement(animate === true ? AnimatedNodes : StaticNodes, {\n            key: 'nodes',\n            nodes,\n            color: getColor,\n            borderWidth: nodeBorderWidth,\n            borderColor: getBorderColor,\n            handleNodeHover: isInteractive ? handleNodeHover : undefined,\n            handleNodeLeave: isInteractive ? handleNodeLeave : undefined,\n        }),\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                nodes,\n                                links,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nNetwork.propTypes = NetworkPropTypes\nNetwork.defaultProps = NetworkDefaultProps\n\nexport default withContainer(Network)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Network from './Network'\n\nconst ResponsiveNetwork = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Network width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetwork\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useRef, useEffect } from 'react'\nimport { withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { NetworkCanvasPropTypes, NetworkCanvasDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness } from './hooks'\n\nconst NetworkCanvas = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n\n        linkThickness,\n        linkColor,\n\n        isInteractive,\n    } = props\n\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const theme = useTheme()\n    const getNodeColor = useNodeColor(nodeColor)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'links') {\n                links.forEach(link => {\n                    ctx.strokeStyle = getLinkColor(link)\n                    ctx.lineWidth = getLinkThickness(link)\n                    ctx.beginPath()\n                    ctx.moveTo(link.source.x, link.source.y)\n                    ctx.lineTo(link.target.x, link.target.y)\n                    ctx.stroke()\n                })\n            } else if (layer === 'nodes') {\n                nodes.forEach(node => {\n                    ctx.fillStyle = getNodeColor(node)\n                    ctx.beginPath()\n                    ctx.arc(node.x, node.y, node.radius, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (nodeBorderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(node)\n                        ctx.lineWidth = nodeBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else if (typeof layer === 'function') {\n                layer(ctx, {\n                    ...props,\n                    nodes,\n                    links,\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        nodes,\n        links,\n        getNodeColor,\n        nodeBorderWidth,\n        getBorderColor,\n        getLinkThickness,\n        getLinkColor,\n    ])\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n        />\n    )\n}\n\nNetworkCanvas.propTypes = NetworkCanvasPropTypes\nNetworkCanvas.defaultProps = NetworkCanvasDefaultProps\n\nexport default withContainer(NetworkCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport NetworkCanvas from './NetworkCanvas'\n\nconst ResponsiveNetworkCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <NetworkCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetworkCanvas\n"],"names":["defineProperty","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","commonPropTypes","nodes","PropTypes","arrayOf","shape","id","string","isRequired","links","source","target","layers","oneOfType","oneOf","func","linkDistance","number","repulsivity","distanceMin","distanceMax","iterations","nodeColor","nodeBorderWidth","nodeBorderColor","inheritedColorPropType","linkThickness","linkColor","isInteractive","bool","NetworkPropTypes","role","motionPropTypes","NetworkCanvasPropTypes","pixelRatio","commonDefaultProps","Infinity","from","NetworkDefaultProps","animate","motionStiffness","motionDamping","NetworkCanvasDefaultProps","global","window","devicePixelRatio","computeForces","center","computedLinkDistance","isNumber","isString","link","get","linkForce","forceLink","d","distance","chargeForce","forceManyBody","strength","centerForce","forceCenter","charge","useNetwork","useState","currentNodes","setCurrentNodes","currentLinks","setCurrentLinks","useEffect","forces","nodesCopy","map","node","linksCopy","simulation","forceSimulation","force","stop","tick","previousSource","find","n","previousTarget","useNodeColor","color","useMemo","useLinkThickness","thickness","Node","x","y","radius","borderWidth","borderColor","scale","handleNodeHover","handleNodeLeave","event","memo","willEnter","style","val","willLeave","springConfig","spring","AnimatedNodes","useMotionConfig","key","data","interpolatedStyles","Math","max","StaticNodes","Link","sourceX","sourceY","targetX","targetY","AnimatedLinks","StaticLinks","NetworkNodeTooltip","format","tooltip","bind","Network","props","width","height","partialMargin","margin","rawNodes","rawLinks","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","theme","useTheme","getColor","getBorderColor","useInheritedColor","getLinkThickness","getLinkColor","useTooltip","showTooltipFromEvent","hideTooltip","useCallback","layerById","React","createElement","undefined","layer","i","defaultProps","withContainer","ResponsiveNetwork","NetworkCanvas","canvasEl","useRef","getNodeColor","current","ctx","getContext","fillStyle","background","fillRect","translate","left","top","forEach","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","arc","PI","fill","cursor","ResponsiveNetworkCanvas"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"nivo-network.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/Node.js","../src/props.js","../src/hooks.js","../src/AnimatedNodes.js","../src/StaticNodes.js","../src/Link.js","../src/AnimatedLinks.js","../src/StaticLinks.js","../src/NetworkNodeTooltip.js","../src/Network.js","../src/ResponsiveNetwork.js","../src/NetworkCanvas.js","../src/ResponsiveNetworkCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Node = ({\n    node,\n    x,\n    y,\n    radius,\n    color,\n    borderWidth,\n    borderColor,\n    scale = 1,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    return (\n        <circle\n            transform={`translate(${x},${y}) scale(${scale})`}\n            r={radius}\n            fill={color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            onMouseEnter={event => handleNodeHover(node, event)}\n            onMouseMove={event => handleNodeHover(node, event)}\n            onMouseLeave={handleNodeLeave}\n        />\n    )\n}\n\nNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    radius: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    scale: PropTypes.number,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default Node\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport Node from './Node'\n\nconst commonPropTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    links: PropTypes.arrayOf(\n        PropTypes.shape({\n            source: PropTypes.string.isRequired,\n            target: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['links', 'nodes']), PropTypes.func])\n    ).isRequired,\n\n    linkDistance: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.number])\n        .isRequired,\n    repulsivity: PropTypes.number.isRequired,\n    distanceMin: PropTypes.number.isRequired,\n    distanceMax: PropTypes.number.isRequired,\n    iterations: PropTypes.number.isRequired,\n\n    nodeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    nodeBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    nodeBorderColor: inheritedColorPropType.isRequired,\n    nodeComponent: PropTypes.func.isRequired,\n\n    linkThickness: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    linkColor: inheritedColorPropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n}\n\nexport const NetworkPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n    ...motionPropTypes,\n}\n\nexport const NetworkCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    layers: ['links', 'nodes'],\n\n    linkDistance: 30,\n    repulsivity: 10,\n    distanceMin: 1,\n    distanceMax: Infinity,\n    iterations: 90,\n\n    nodeComponent: Node,\n    nodeBorderWidth: 0,\n    nodeBorderColor: { from: 'color' },\n\n    linkThickness: 1,\n    linkColor: { from: 'source.color' },\n\n    isInteractive: true,\n}\n\nexport const NetworkDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    role: 'img',\n}\n\nexport const NetworkCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useState, useEffect, useMemo } from 'react'\nimport get from 'lodash/get'\nimport isString from 'lodash/isString'\nimport isNumber from 'lodash/isNumber'\nimport { forceSimulation, forceManyBody, forceCenter, forceLink } from 'd3-force'\n\nconst computeForces = ({ linkDistance, repulsivity, distanceMin, distanceMax, center }) => {\n    let computedLinkDistance\n    if (typeof linkDistance === 'function') {\n        computedLinkDistance = linkDistance\n    } else if (isNumber(linkDistance)) {\n        computedLinkDistance = linkDistance\n    } else if (isString(linkDistance)) {\n        computedLinkDistance = link => get(link, linkDistance)\n    }\n\n    const linkForce = forceLink()\n        .id(d => d.id)\n        .distance(computedLinkDistance)\n\n    const chargeForce = forceManyBody()\n        .strength(-repulsivity)\n        .distanceMin(distanceMin)\n        .distanceMax(distanceMax)\n\n    const centerForce = forceCenter(center[0], center[1])\n\n    return { link: linkForce, charge: chargeForce, center: centerForce }\n}\n\nexport const useNetwork = ({\n    nodes,\n    links,\n    linkDistance,\n    repulsivity,\n    distanceMin,\n    distanceMax,\n    center,\n    iterations,\n}) => {\n    const [currentNodes, setCurrentNodes] = useState([])\n    const [currentLinks, setCurrentLinks] = useState([])\n\n    useEffect(() => {\n        const forces = computeForces({\n            linkDistance,\n            repulsivity,\n            distanceMin,\n            distanceMax,\n            center,\n        })\n\n        const nodesCopy = nodes.map(node => ({ ...node }))\n        const linksCopy = links.map(link => ({\n            id: `${link.source}.${link.target}`,\n            ...link,\n        }))\n\n        const simulation = forceSimulation(nodesCopy)\n            .force('link', forces.link.links(linksCopy))\n            .force('charge', forces.charge)\n            .force('center', forces.center)\n            .stop()\n\n        simulation.tick(iterations)\n\n        setCurrentNodes(nodesCopy)\n        setCurrentLinks(\n            linksCopy.map(link => {\n                link.previousSource = currentNodes.find(n => n.id === link.source.id)\n                link.previousTarget = currentNodes.find(n => n.id === link.target.id)\n\n                return link\n            })\n        )\n\n        return () => {\n            simulation.stop()\n        }\n    }, [\n        nodes,\n        links,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center[0],\n        center[1],\n    ])\n\n    return [currentNodes, currentLinks]\n}\n\nexport const useNodeColor = color =>\n    useMemo(() => {\n        if (typeof color === 'function') return color\n        return () => color\n    }, [color])\n\nexport const useNodeComponent = nodeComponent =>\n    useMemo(() => {\n        if (typeof nodeComponent === 'function') return nodeComponent\n        return () => nodeComponent\n    }, [nodeComponent])\n\nexport const useLinkThickness = thickness =>\n    useMemo(() => {\n        if (typeof thickness === 'function') return thickness\n        return () => thickness\n    }, [thickness])\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@nivo/core'\n\nconst willEnter = ({ style }) => ({\n    x: style.x.val,\n    y: style.y.val,\n    radius: style.radius.val,\n    scale: 0,\n})\n\nconst willLeave = springConfig => ({ style }) => ({\n    x: style.x,\n    y: style.y,\n    radius: style.radius,\n    scale: spring(0, springConfig),\n})\n\nconst AnimatedNodes = ({\n    nodes,\n    color,\n    borderWidth,\n    borderColor,\n    handleNodeHover,\n    handleNodeLeave,\n    nodeComponent,\n}) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            willLeave={willLeave(springConfig)}\n            styles={nodes.map(node => ({\n                key: node.id,\n                data: node,\n                style: {\n                    x: spring(node.x, springConfig),\n                    y: spring(node.y, springConfig),\n                    radius: spring(node.radius, springConfig),\n                    scale: spring(1, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: node }) => {\n                        return React.createElement(nodeComponent, {\n                            key: key,\n                            node: node,\n                            x: style.x,\n                            y: style.y,\n                            radius: Math.max(style.radius, 0),\n                            color: color(node),\n                            borderWidth: borderWidth,\n                            borderColor: borderColor(node),\n                            handleNodeHover: handleNodeHover,\n                            handleNodeLeave: handleNodeLeave,\n                        })\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n    nodeComponent: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst StaticNodes = ({\n    nodes,\n    color,\n    borderWidth,\n    borderColor,\n    handleNodeHover,\n    handleNodeLeave,\n    nodeComponent,\n}) => {\n    return nodes.map(node => {\n        return React.createElement(nodeComponent, {\n            key: node.id,\n            node: node,\n            x: node.x,\n            y: node.y,\n            radius: node.radius,\n            color: color(node),\n            borderWidth: borderWidth,\n            borderColor: borderColor(node),\n            handleNodeHover: handleNodeHover,\n            handleNodeLeave: handleNodeLeave,\n        })\n    })\n}\n\nStaticNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n    nodeComponent: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ sourceX, sourceY, targetX, targetY, thickness, color }) => {\n    return (\n        <line\n            stroke={color}\n            strokeWidth={thickness}\n            strokeLinecap=\"round\"\n            x1={sourceX}\n            y1={sourceY}\n            x2={targetX}\n            y2={targetY}\n        />\n    )\n}\n\nLink.propTypes = {\n    link: PropTypes.object.isRequired,\n    sourceX: PropTypes.number.isRequired,\n    sourceY: PropTypes.number.isRequired,\n    targetX: PropTypes.number.isRequired,\n    targetY: PropTypes.number.isRequired,\n    thickness: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n}\n\nexport default memo(Link)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@nivo/core'\nimport Link from './Link'\n\nconst willEnter = ({ style, data }) => {\n    const sourceX = data.previousSource ? data.previousSource.x : style.sourceX.val\n    const sourceY = data.previousSource ? data.previousSource.y : style.sourceY.val\n\n    return {\n        sourceX,\n        sourceY,\n        targetX: sourceX,\n        targetY: sourceY,\n    }\n}\n\nconst AnimatedLinks = ({ links, linkThickness, linkColor }) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            styles={links.map(link => ({\n                key: link.id,\n                data: link,\n                style: {\n                    sourceX: spring(link.source.x, springConfig),\n                    sourceY: spring(link.source.y, springConfig),\n                    targetX: spring(link.target.x, springConfig),\n                    targetY: spring(link.target.y, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: link }) => {\n                        return (\n                            <Link\n                                key={key}\n                                link={link}\n                                color={linkColor(link)}\n                                thickness={linkThickness(link)}\n                                sourceX={style.sourceX}\n                                sourceY={style.sourceY}\n                                targetX={style.targetX}\n                                targetY={style.targetY}\n                            />\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedLinks)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Link from './Link'\n\nconst StaticLinks = ({ links, linkThickness, linkColor }) => {\n    return links.map(link => {\n        return (\n            <Link\n                key={link.id}\n                link={link}\n                color={linkColor(link)}\n                thickness={linkThickness(link)}\n                sourceX={link.source.x}\n                sourceY={link.source.y}\n                targetX={link.target.x}\n                targetY={link.target.y}\n            />\n        )\n    })\n}\n\nStaticLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticLinks)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst NetworkNodeTooltip = ({ node, format, tooltip }) => (\n    <BasicTooltip\n        id={node.id}\n        enableChip={true}\n        color={node.color}\n        format={format}\n        renderContent={typeof tooltip === 'function' ? tooltip.bind(null, { ...node }) : null}\n    />\n)\n\nNetworkNodeTooltip.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n    format: PropTypes.func,\n    tooltip: PropTypes.func,\n}\n\nexport default memo(NetworkNodeTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment, useCallback } from 'react'\nimport { withContainer, useDimensions, SvgWrapper, useTheme, useMotionConfig } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { NetworkPropTypes, NetworkDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness, useNodeComponent } from './hooks'\nimport AnimatedNodes from './AnimatedNodes'\nimport StaticNodes from './StaticNodes'\nimport AnimatedLinks from './AnimatedLinks'\nimport StaticLinks from './StaticLinks'\nimport NetworkNodeTooltip from './NetworkNodeTooltip'\n\nconst Network = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n        nodeComponent,\n\n        linkThickness,\n        linkColor,\n        tooltip,\n        isInteractive,\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { animate } = useMotionConfig()\n    const theme = useTheme()\n    const getColor = useNodeColor(nodeColor)\n    const getNodeComponent = useNodeComponent(nodeComponent)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleNodeHover = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(<NetworkNodeTooltip node={node} tooltip={tooltip} />, event)\n        },\n        [showTooltipFromEvent, tooltip]\n    )\n\n    const handleNodeLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const layerById = {\n        links: React.createElement(animate === true ? AnimatedLinks : StaticLinks, {\n            key: 'links',\n            links,\n            linkThickness: getLinkThickness,\n            linkColor: getLinkColor,\n        }),\n        nodes: React.createElement(animate === true ? AnimatedNodes : StaticNodes, {\n            key: 'nodes',\n            nodes,\n            color: getColor,\n            borderWidth: nodeBorderWidth,\n            borderColor: getBorderColor,\n            nodeComponent: getNodeComponent,\n            handleNodeHover: isInteractive ? handleNodeHover : undefined,\n            handleNodeLeave: isInteractive ? handleNodeLeave : undefined,\n        }),\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                nodes,\n                                links,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nNetwork.propTypes = NetworkPropTypes\nNetwork.defaultProps = NetworkDefaultProps\n\nexport default withContainer(Network)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Network from './Network'\n\nconst ResponsiveNetwork = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Network width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetwork\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useRef, useEffect } from 'react'\nimport { withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { NetworkCanvasPropTypes, NetworkCanvasDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness, useNodeComponent } from './hooks'\n\nconst NetworkCanvas = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n        nodeComponent,\n\n        linkThickness,\n        linkColor,\n\n        isInteractive,\n    } = props\n\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const theme = useTheme()\n    const getNodeColor = useNodeColor(nodeColor)\n    const getNodeComponent = useNodeComponent(nodeComponent)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'links') {\n                links.forEach(link => {\n                    ctx.strokeStyle = getLinkColor(link)\n                    ctx.lineWidth = getLinkThickness(link)\n                    ctx.beginPath()\n                    ctx.moveTo(link.source.x, link.source.y)\n                    ctx.lineTo(link.target.x, link.target.y)\n                    ctx.stroke()\n                })\n            } else if (layer === 'nodes') {\n                nodes.forEach(node => {\n                    ctx.fillStyle = getNodeColor(node)\n                    ctx.beginPath()\n                    ctx.arc(node.x, node.y, node.radius, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (nodeBorderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(node)\n                        ctx.lineWidth = nodeBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else if (typeof layer === 'function') {\n                layer(ctx, {\n                    ...props,\n                    nodes,\n                    links,\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        nodes,\n        links,\n        getNodeColor,\n        getNodeComponent,\n        nodeBorderWidth,\n        getBorderColor,\n        getLinkThickness,\n        getLinkColor,\n    ])\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n        />\n    )\n}\n\nNetworkCanvas.propTypes = NetworkCanvasPropTypes\nNetworkCanvas.defaultProps = NetworkCanvasDefaultProps\n\nexport default withContainer(NetworkCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport NetworkCanvas from './NetworkCanvas'\n\nconst ResponsiveNetworkCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <NetworkCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetworkCanvas\n"],"names":["defineProperty","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","Node","node","x","y","radius","color","borderWidth","borderColor","scale","handleNodeHover","handleNodeLeave","event","commonPropTypes","nodes","PropTypes","arrayOf","shape","id","string","isRequired","links","source","target","layers","oneOfType","oneOf","func","linkDistance","number","repulsivity","distanceMin","distanceMax","iterations","nodeColor","nodeBorderWidth","nodeBorderColor","inheritedColorPropType","nodeComponent","linkThickness","linkColor","isInteractive","bool","NetworkPropTypes","role","motionPropTypes","NetworkCanvasPropTypes","pixelRatio","commonDefaultProps","Infinity","from","NetworkDefaultProps","animate","motionStiffness","motionDamping","NetworkCanvasDefaultProps","global","window","devicePixelRatio","computeForces","center","computedLinkDistance","isNumber","isString","link","get","linkForce","forceLink","d","distance","chargeForce","forceManyBody","strength","centerForce","forceCenter","charge","useNetwork","useState","currentNodes","setCurrentNodes","currentLinks","setCurrentLinks","useEffect","forces","nodesCopy","map","linksCopy","simulation","forceSimulation","force","stop","tick","previousSource","find","n","previousTarget","useNodeColor","useMemo","useNodeComponent","useLinkThickness","thickness","willEnter","style","val","willLeave","springConfig","spring","AnimatedNodes","useMotionConfig","key","data","interpolatedStyles","React","createElement","Math","max","memo","StaticNodes","Link","sourceX","sourceY","targetX","targetY","AnimatedLinks","StaticLinks","NetworkNodeTooltip","format","tooltip","bind","Network","props","width","height","partialMargin","margin","rawNodes","rawLinks","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","theme","useTheme","getColor","getNodeComponent","getBorderColor","useInheritedColor","getLinkThickness","getLinkColor","useTooltip","showTooltipFromEvent","hideTooltip","useCallback","layerById","undefined","layer","i","defaultProps","withContainer","ResponsiveNetwork","NetworkCanvas","canvasEl","useRef","getNodeColor","current","ctx","getContext","fillStyle","background","fillRect","translate","left","top","forEach","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","arc","PI","fill","cursor","ResponsiveNetworkCanvas"],"mappings":";;;;;;;;;;;AAAe,SAAS,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACzD,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE;AAClB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;AACpC,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,YAAY,EAAE,IAAI;AACxB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK,CAAC,CAAC;AACP,GAAG,MAAM;AACT,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACrB,GAAG;AAEH,EAAE,OAAO,GAAG,CAAC;AACb;;ACXA,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE;AACzC,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAEjC,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;AACpC,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACvD,IAAI,IAAI,cAAc,EAAE,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE;AAChE,MAAM,OAAO,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC;AACrE,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACnC,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AAEc,SAAS,cAAc,CAAC,MAAM,EAAE;AAC/C,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,IAAI,IAAI,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AAE1D,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;AACf,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AAC3D,QAAQA,eAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AACjD,OAAO,CAAC,CAAC;AACT,KAAK,MAAM,IAAI,MAAM,CAAC,yBAAyB,EAAE;AACjD,MAAM,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC;AAChF,KAAK,MAAM;AACX,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AACrD,QAAQ,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;AACzF,OAAO,CAAC,CAAC;AACT,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;AClCe,SAAS,eAAe,CAAC,GAAG,EAAE;AAC7C,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC;AACrC;;ACFe,SAAS,qBAAqB,CAAC,GAAG,EAAE,CAAC,EAAE;AACtD,EAAE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,EAAE,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO;AACjF,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC;AAChB,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;AAChB,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;AACjB,EAAE,IAAI,EAAE,GAAG,SAAS,CAAC;AAErB,EAAE,IAAI;AACN,IAAI,KAAK,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE;AACxF,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AAE1B,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM;AACxC,KAAK;AACL,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB,IAAI,EAAE,GAAG,IAAI,CAAC;AACd,IAAI,EAAE,GAAG,GAAG,CAAC;AACb,GAAG,SAAS;AACZ,IAAI,IAAI;AACR,MAAM,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC;AACtD,KAAK,SAAS;AACd,MAAM,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC;AACvB,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd;;ACzBe,SAAS,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE;AACpD,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;AAExD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AACvD,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACrB,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd;;ACPe,SAAS,2BAA2B,CAAC,CAAC,EAAE,MAAM,EAAE;AAC/D,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO;AACjB,EAAE,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,OAAOC,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAChE,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzD,EAAE,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC;AAC9D,EAAE,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,EAAE,IAAI,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAOA,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAClH;;ACRe,SAAS,gBAAgB,GAAG;AAC3C,EAAE,MAAM,IAAI,SAAS,CAAC,2IAA2I,CAAC,CAAC;AACnK;;ACEe,SAAS,cAAc,CAAC,GAAG,EAAE,CAAC,EAAE;AAC/C,EAAE,OAAOC,eAAc,CAAC,GAAG,CAAC,IAAIC,qBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,IAAIC,2BAA0B,CAAC,GAAG,EAAE,CAAC,CAAC,IAAIC,gBAAe,EAAE,CAAC;AACxH;;ACKA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAWP;AAAA,MAVFC,IAUE,QAVFA,IAUE;AAAA,MATFC,CASE,QATFA,CASE;AAAA,MARFC,CAQE,QARFA,CAQE;AAAA,MAPFC,MAOE,QAPFA,MAOE;AAAA,MANFC,KAME,QANFA,KAME;AAAA,MALFC,WAKE,QALFA,WAKE;AAAA,MAJFC,WAIE,QAJFA,WAIE;AAAA,wBAHFC,KAGE;AAAA,MAHFA,KAGE,2BAHM,CAGN;AAAA,MAFFC,eAEE,QAFFA,eAEE;AAAA,MADFC,eACE,QADFA,eACE;AACF,SACI;AACI,IAAA,SAAS,sBAAeR,CAAf,cAAoBC,CAApB,qBAAgCK,KAAhC,MADb;AAEI,IAAA,CAAC,EAAEJ,MAFP;AAGI,IAAA,IAAI,EAAEC,KAHV;AAII,IAAA,WAAW,EAAEC,WAJjB;AAKI,IAAA,MAAM,EAAEC,WALZ;AAMI,IAAA,YAAY,EAAE,sBAAAI,KAAK;AAAA,aAAIF,eAAe,CAACR,IAAD,EAAOU,KAAP,CAAnB;AAAA,KANvB;AAOI,IAAA,WAAW,EAAE,qBAAAA,KAAK;AAAA,aAAIF,eAAe,CAACR,IAAD,EAAOU,KAAP,CAAnB;AAAA,KAPtB;AAQI,IAAA,YAAY,EAAED;AARlB,IADJ;AAYH,CAxBD;;ACEA,IAAME,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAEC,SAAS,CAACC,OAAV,CACHD,SAAS,CAACE,KAAV,CAAgB;AACZC,IAAAA,EAAE,EAAEH,SAAS,CAACI,MAAV,CAAiBC;AADT,GAAhB,CADG,EAILA,UALkB;AAMpBC,EAAAA,KAAK,EAAEN,SAAS,CAACC,OAAV,CACHD,SAAS,CAACE,KAAV,CAAgB;AACZK,IAAAA,MAAM,EAAEP,SAAS,CAACI,MAAV,CAAiBC,UADb;AAEZG,IAAAA,MAAM,EAAER,SAAS,CAACI,MAAV,CAAiBC;AAFb,GAAhB,CADG,EAKLA,UAXkB;AAapBI,EAAAA,MAAM,EAAET,SAAS,CAACC,OAAV,CACJD,SAAS,CAACU,SAAV,CAAoB,CAACV,SAAS,CAACW,KAAV,CAAgB,CAAC,OAAD,EAAU,OAAV,CAAhB,CAAD,EAAsCX,SAAS,CAACY,IAAhD,CAApB,CADI,EAENP,UAfkB;AAiBpBQ,EAAAA,YAAY,EAAEb,SAAS,CAACU,SAAV,CAAoB,CAACV,SAAS,CAACI,MAAX,EAAmBJ,SAAS,CAACY,IAA7B,EAAmCZ,SAAS,CAACc,MAA7C,CAApB,EACTT,UAlBe;AAmBpBU,EAAAA,WAAW,EAAEf,SAAS,CAACc,MAAV,CAAiBT,UAnBV;AAoBpBW,EAAAA,WAAW,EAAEhB,SAAS,CAACc,MAAV,CAAiBT,UApBV;AAqBpBY,EAAAA,WAAW,EAAEjB,SAAS,CAACc,MAAV,CAAiBT,UArBV;AAsBpBa,EAAAA,UAAU,EAAElB,SAAS,CAACc,MAAV,CAAiBT,UAtBT;AAwBpBc,EAAAA,SAAS,EAAEnB,SAAS,CAACU,SAAV,CAAoB,CAACV,SAAS,CAACI,MAAX,EAAmBJ,SAAS,CAACY,IAA7B,CAApB,EAAwDP,UAxB/C;AAyBpBe,EAAAA,eAAe,EAAEpB,SAAS,CAACU,SAAV,CAAoB,CAACV,SAAS,CAACc,MAAX,EAAmBd,SAAS,CAACY,IAA7B,CAApB,EAAwDP,UAzBrD;AA0BpBgB,EAAAA,eAAe,EAAEC,sBAAsB,CAACjB,UA1BpB;AA2BpBkB,EAAAA,aAAa,EAAEvB,SAAS,CAACY,IAAV,CAAeP,UA3BV;AA6BpBmB,EAAAA,aAAa,EAAExB,SAAS,CAACU,SAAV,CAAoB,CAACV,SAAS,CAACc,MAAX,EAAmBd,SAAS,CAACY,IAA7B,CAApB,EAAwDP,UA7BnD;AA8BpBoB,EAAAA,SAAS,EAAEH,sBAAsB,CAACjB,UA9Bd;AAgCpBqB,EAAAA,aAAa,EAAE1B,SAAS,CAAC2B,IAAV,CAAetB;AAhCV,CAAxB;IAmCauB,gBAAgB,qCACtB9B,eADsB;AAEzB+B,EAAAA,IAAI,EAAE7B,SAAS,CAACI,MAAV,CAAiBC;AAFE,GAGtByB,eAHsB;IAMhBC,sBAAsB;AAC/BC,EAAAA,UAAU,EAAEhC,SAAS,CAACc,MAAV,CAAiBT;AADE,GAE5BP,eAF4B;AAKnC,IAAMmC,kBAAkB,GAAG;AACvBxB,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV,CADe;AAGvBI,EAAAA,YAAY,EAAE,EAHS;AAIvBE,EAAAA,WAAW,EAAE,EAJU;AAKvBC,EAAAA,WAAW,EAAE,CALU;AAMvBC,EAAAA,WAAW,EAAEiB,QANU;AAOvBhB,EAAAA,UAAU,EAAE,EAPW;AASvBK,EAAAA,aAAa,EAAErC,IATQ;AAUvBkC,EAAAA,eAAe,EAAE,CAVM;AAWvBC,EAAAA,eAAe,EAAE;AAAEc,IAAAA,IAAI,EAAE;AAAR,GAXM;AAavBX,EAAAA,aAAa,EAAE,CAbQ;AAcvBC,EAAAA,SAAS,EAAE;AAAEU,IAAAA,IAAI,EAAE;AAAR,GAdY;AAgBvBT,EAAAA,aAAa,EAAE;AAhBQ,CAA3B;IAmBaU,mBAAmB,qCACzBH,kBADyB;AAE5BI,EAAAA,OAAO,EAAE,IAFmB;AAG5BC,EAAAA,eAAe,EAAE,EAHW;AAI5BC,EAAAA,aAAa,EAAE,EAJa;AAK5BV,EAAAA,IAAI,EAAE;AALsB;IAQnBW,yBAAyB,qCAC/BP,kBAD+B;AAElCD,EAAAA,UAAU,EACNS,MAAM,CAACC,MAAP,IAAiBD,MAAM,CAACC,MAAP,CAAcC,gBAA/B,GAAkDF,MAAM,CAACC,MAAP,CAAcC,gBAAhE,GAAmF;AAHrD;;ACxEtC,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAqE;AAAA,MAAlE/B,YAAkE,QAAlEA,YAAkE;AAAA,MAApDE,WAAoD,QAApDA,WAAoD;AAAA,MAAvCC,WAAuC,QAAvCA,WAAuC;AAAA,MAA1BC,WAA0B,QAA1BA,WAA0B;AAAA,MAAb4B,MAAa,QAAbA,MAAa;AACvF,MAAIC,oBAAJ;AACA,MAAI,OAAOjC,YAAP,KAAwB,UAA5B,EAAwC;AACpCiC,IAAAA,oBAAoB,GAAGjC,YAAvB;AACH,GAFD,MAEO,IAAIkC,QAAQ,CAAClC,YAAD,CAAZ,EAA4B;AAC/BiC,IAAAA,oBAAoB,GAAGjC,YAAvB;AACH,GAFM,MAEA,IAAImC,QAAQ,CAACnC,YAAD,CAAZ,EAA4B;AAC/BiC,IAAAA,oBAAoB,GAAG,8BAAAG,IAAI;AAAA,aAAIC,GAAG,CAACD,IAAD,EAAOpC,YAAP,CAAP;AAAA,KAA3B;AACH;AAED,MAAMsC,SAAS,GAAGC,SAAS,GACtBjD,EADa,CACV,UAAAkD,CAAC;AAAA,WAAIA,CAAC,CAAClD,EAAN;AAAA,GADS,EAEbmD,QAFa,CAEJR,oBAFI,CAAlB;AAIA,MAAMS,WAAW,GAAGC,aAAa,GAC5BC,QADe,CACN,CAAC1C,WADK,EAEfC,WAFe,CAEHA,WAFG,EAGfC,WAHe,CAGHA,WAHG,CAApB;AAKA,MAAMyC,WAAW,GAAGC,WAAW,CAACd,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,CAAD,CAAlB,CAA/B;AAEA,SAAO;AAAEI,IAAAA,IAAI,EAAEE,SAAR;AAAmBS,IAAAA,MAAM,EAAEL,WAA3B;AAAwCV,IAAAA,MAAM,EAAEa;AAAhD,GAAP;AACH,CAtBD;IAwBaG,UAAU,GAAG,SAAbA,UAAa,QASpB;AAAA,MARF9D,KAQE,SARFA,KAQE;AAAA,MAPFO,KAOE,SAPFA,KAOE;AAAA,MANFO,YAME,SANFA,YAME;AAAA,MALFE,WAKE,SALFA,WAKE;AAAA,MAJFC,WAIE,SAJFA,WAIE;AAAA,MAHFC,WAGE,SAHFA,WAGE;AAAA,MAFF4B,MAEE,SAFFA,MAEE;AAAA,MADF3B,UACE,SADFA,UACE;AAAA,kBACsC4C,QAAQ,CAAC,EAAD,CAD9C;AAAA;AAAA,MACKC,YADL;AAAA,MACmBC,eADnB;AAAA,mBAEsCF,QAAQ,CAAC,EAAD,CAF9C;AAAA;AAAA,MAEKG,YAFL;AAAA,MAEmBC,eAFnB;AAIFC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMC,MAAM,GAAGxB,aAAa,CAAC;AACzB/B,MAAAA,YAAY,EAAZA,YADyB;AAEzBE,MAAAA,WAAW,EAAXA,WAFyB;AAGzBC,MAAAA,WAAW,EAAXA,WAHyB;AAIzBC,MAAAA,WAAW,EAAXA,WAJyB;AAKzB4B,MAAAA,MAAM,EAANA;AALyB,KAAD,CAA5B;AAQA,QAAMwB,SAAS,GAAGtE,KAAK,CAACuE,GAAN,CAAU,UAAAnF,IAAI;AAAA,gCAAUA,IAAV;AAAA,KAAd,CAAlB;AACA,QAAMoF,SAAS,GAAGjE,KAAK,CAACgE,GAAN,CAAU,UAAArB,IAAI;AAAA;AAC5B9C,QAAAA,EAAE,YAAK8C,IAAI,CAAC1C,MAAV,cAAoB0C,IAAI,CAACzC,MAAzB;AAD0B,SAEzByC,IAFyB;AAAA,KAAd,CAAlB;AAKA,QAAMuB,UAAU,GAAGC,eAAe,CAACJ,SAAD,CAAf,CACdK,KADc,CACR,MADQ,EACAN,MAAM,CAACnB,IAAP,CAAY3C,KAAZ,CAAkBiE,SAAlB,CADA,EAEdG,KAFc,CAER,QAFQ,EAEEN,MAAM,CAACR,MAFT,EAGdc,KAHc,CAGR,QAHQ,EAGEN,MAAM,CAACvB,MAHT,EAId8B,IAJc,EAAnB;AAMAH,IAAAA,UAAU,CAACI,IAAX,CAAgB1D,UAAhB;AAEA8C,IAAAA,eAAe,CAACK,SAAD,CAAf;AACAH,IAAAA,eAAe,CACXK,SAAS,CAACD,GAAV,CAAc,UAAArB,IAAI,EAAI;AAClBA,MAAAA,IAAI,CAAC4B,cAAL,GAAsBd,YAAY,CAACe,IAAb,CAAkB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAAC5E,EAAF,KAAS8C,IAAI,CAAC1C,MAAL,CAAYJ,EAAzB;AAAA,OAAnB,CAAtB;AACA8C,MAAAA,IAAI,CAAC+B,cAAL,GAAsBjB,YAAY,CAACe,IAAb,CAAkB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAAC5E,EAAF,KAAS8C,IAAI,CAACzC,MAAL,CAAYL,EAAzB;AAAA,OAAnB,CAAtB;AAEA,aAAO8C,IAAP;AACH,KALD,CADW,CAAf;AASA,WAAO,YAAM;AACTuB,MAAAA,UAAU,CAACG,IAAX;AACH,KAFD;AAGH,GApCQ,EAoCN,CACC5E,KADD,EAECO,KAFD,EAGCO,YAHD,EAICE,WAJD,EAKCC,WALD,EAMCC,WAND,EAOCC,UAPD,EAQC2B,MAAM,CAAC,CAAD,CARP,EASCA,MAAM,CAAC,CAAD,CATP,CApCM,CAAT;AAgDA,SAAO,CAACkB,YAAD,EAAeE,YAAf,CAAP;AACH;IAEYgB,YAAY,GAAG,SAAfA,YAAe,CAAA1F,KAAK;AAAA,SAC7B2F,OAAO,CAAC,YAAM;AACV,QAAI,OAAO3F,KAAP,KAAiB,UAArB,EAAiC,OAAOA,KAAP;AACjC,WAAO;AAAA,aAAMA,KAAN;AAAA,KAAP;AACH,GAHM,EAGJ,CAACA,KAAD,CAHI,CADsB;AAAA;IAMpB4F,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA5D,aAAa;AAAA,SACzC2D,OAAO,CAAC,YAAM;AACV,QAAI,OAAO3D,aAAP,KAAyB,UAA7B,EAAyC,OAAOA,aAAP;AACzC,WAAO;AAAA,aAAMA,aAAN;AAAA,KAAP;AACH,GAHM,EAGJ,CAACA,aAAD,CAHI,CADkC;AAAA;IAMhC6D,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,SAAS;AAAA,SACrCH,OAAO,CAAC,YAAM;AACV,QAAI,OAAOG,SAAP,KAAqB,UAAzB,EAAqC,OAAOA,SAAP;AACrC,WAAO;AAAA,aAAMA,SAAN;AAAA,KAAP;AACH,GAHM,EAGJ,CAACA,SAAD,CAHI,CAD8B;AAAA;;ACrGzC,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAgB;AAC9BnG,IAAAA,CAAC,EAAEmG,KAAK,CAACnG,CAAN,CAAQoG,GADmB;AAE9BnG,IAAAA,CAAC,EAAEkG,KAAK,CAAClG,CAAN,CAAQmG,GAFmB;AAG9BlG,IAAAA,MAAM,EAAEiG,KAAK,CAACjG,MAAN,CAAakG,GAHS;AAI9B9F,IAAAA,KAAK,EAAE;AAJuB,GAAhB;AAAA,CAAlB;AAOA,IAAM+F,SAAS,GAAG,SAAZA,SAAY,CAAAC,YAAY;AAAA,SAAI;AAAA,QAAGH,KAAH,SAAGA,KAAH;AAAA,WAAgB;AAC9CnG,MAAAA,CAAC,EAAEmG,KAAK,CAACnG,CADqC;AAE9CC,MAAAA,CAAC,EAAEkG,KAAK,CAAClG,CAFqC;AAG9CC,MAAAA,MAAM,EAAEiG,KAAK,CAACjG,MAHgC;AAI9CI,MAAAA,KAAK,EAAEiG,MAAM,CAAC,CAAD,EAAID,YAAJ;AAJiC,KAAhB;AAAA,GAAJ;AAAA,CAA9B;AAOA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,QAQhB;AAAA,MAPF7F,KAOE,SAPFA,KAOE;AAAA,MANFR,KAME,SANFA,KAME;AAAA,MALFC,WAKE,SALFA,WAKE;AAAA,MAJFC,WAIE,SAJFA,WAIE;AAAA,MAHFE,eAGE,SAHFA,eAGE;AAAA,MAFFC,eAEE,SAFFA,eAEE;AAAA,MADF2B,aACE,SADFA,aACE;AAAA,yBACuBsE,eAAe,EADtC;AAAA,MACMH,YADN,oBACMA,YADN;AAGF,SACI,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAEJ,SADf;AAEI,IAAA,SAAS,EAAEG,SAAS,CAACC,YAAD,CAFxB;AAGI,IAAA,MAAM,EAAE3F,KAAK,CAACuE,GAAN,CAAU,UAAAnF,IAAI;AAAA,aAAK;AACvB2G,QAAAA,GAAG,EAAE3G,IAAI,CAACgB,EADa;AAEvB4F,QAAAA,IAAI,EAAE5G,IAFiB;AAGvBoG,QAAAA,KAAK,EAAE;AACHnG,UAAAA,CAAC,EAAEuG,MAAM,CAACxG,IAAI,CAACC,CAAN,EAASsG,YAAT,CADN;AAEHrG,UAAAA,CAAC,EAAEsG,MAAM,CAACxG,IAAI,CAACE,CAAN,EAASqG,YAAT,CAFN;AAGHpG,UAAAA,MAAM,EAAEqG,MAAM,CAACxG,IAAI,CAACG,MAAN,EAAcoG,YAAd,CAHX;AAIHhG,UAAAA,KAAK,EAAEiG,MAAM,CAAC,CAAD,EAAID,YAAJ;AAJV;AAHgB,OAAL;AAAA,KAAd;AAHZ,KAcK,UAAAM,kBAAkB;AAAA,WACf,0CACKA,kBAAkB,CAAC1B,GAAnB,CAAuB,iBAAgC;AAAA,UAA7BwB,GAA6B,SAA7BA,GAA6B;AAAA,UAAxBP,KAAwB,SAAxBA,KAAwB;AAAA,UAAXpG,IAAW,SAAjB4G,IAAiB;AACpD,aAAOE,KAAK,CAACC,aAAN,CAAoB3E,aAApB,EAAmC;AACtCuE,QAAAA,GAAG,EAAEA,GADiC;AAEtC3G,QAAAA,IAAI,EAAEA,IAFgC;AAGtCC,QAAAA,CAAC,EAAEmG,KAAK,CAACnG,CAH6B;AAItCC,QAAAA,CAAC,EAAEkG,KAAK,CAAClG,CAJ6B;AAKtCC,QAAAA,MAAM,EAAE6G,IAAI,CAACC,GAAL,CAASb,KAAK,CAACjG,MAAf,EAAuB,CAAvB,CAL8B;AAMtCC,QAAAA,KAAK,EAAEA,KAAK,CAACJ,IAAD,CAN0B;AAOtCK,QAAAA,WAAW,EAAEA,WAPyB;AAQtCC,QAAAA,WAAW,EAAEA,WAAW,CAACN,IAAD,CARc;AAStCQ,QAAAA,eAAe,EAAEA,eATqB;AAUtCC,QAAAA,eAAe,EAAEA;AAVqB,OAAnC,CAAP;AAYH,KAbA,CADL,CADe;AAAA,GAdvB,CADJ;AAmCH,CA9CD;AA0DA,sBAAeyG,IAAI,CAACT,aAAD,CAAnB;;AC1EA,IAAMU,WAAW,GAAG,SAAdA,WAAc,OAQd;AAAA,MAPFvG,KAOE,QAPFA,KAOE;AAAA,MANFR,KAME,QANFA,KAME;AAAA,MALFC,WAKE,QALFA,WAKE;AAAA,MAJFC,WAIE,QAJFA,WAIE;AAAA,MAHFE,eAGE,QAHFA,eAGE;AAAA,MAFFC,eAEE,QAFFA,eAEE;AAAA,MADF2B,aACE,QADFA,aACE;AACF,SAAOxB,KAAK,CAACuE,GAAN,CAAU,UAAAnF,IAAI,EAAI;AACrB,WAAO8G,KAAK,CAACC,aAAN,CAAoB3E,aAApB,EAAmC;AACtCuE,MAAAA,GAAG,EAAE3G,IAAI,CAACgB,EAD4B;AAEtChB,MAAAA,IAAI,EAAEA,IAFgC;AAGtCC,MAAAA,CAAC,EAAED,IAAI,CAACC,CAH8B;AAItCC,MAAAA,CAAC,EAAEF,IAAI,CAACE,CAJ8B;AAKtCC,MAAAA,MAAM,EAAEH,IAAI,CAACG,MALyB;AAMtCC,MAAAA,KAAK,EAAEA,KAAK,CAACJ,IAAD,CAN0B;AAOtCK,MAAAA,WAAW,EAAEA,WAPyB;AAQtCC,MAAAA,WAAW,EAAEA,WAAW,CAACN,IAAD,CARc;AAStCQ,MAAAA,eAAe,EAAEA,eATqB;AAUtCC,MAAAA,eAAe,EAAEA;AAVqB,KAAnC,CAAP;AAYH,GAbM,CAAP;AAcH,CAvBD;AAmCA,oBAAeyG,IAAI,CAACC,WAAD,CAAnB;;ACnCA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA8D;AAAA,MAA3DC,OAA2D,QAA3DA,OAA2D;AAAA,MAAlDC,OAAkD,QAAlDA,OAAkD;AAAA,MAAzCC,OAAyC,QAAzCA,OAAyC;AAAA,MAAhCC,OAAgC,QAAhCA,OAAgC;AAAA,MAAvBtB,SAAuB,QAAvBA,SAAuB;AAAA,MAAZ9F,KAAY,QAAZA,KAAY;AACvE,SACI;AACI,IAAA,MAAM,EAAEA,KADZ;AAEI,IAAA,WAAW,EAAE8F,SAFjB;AAGI,IAAA,aAAa,EAAC,OAHlB;AAII,IAAA,EAAE,EAAEmB,OAJR;AAKI,IAAA,EAAE,EAAEC,OALR;AAMI,IAAA,EAAE,EAAEC,OANR;AAOI,IAAA,EAAE,EAAEC;AAPR,IADJ;AAWH,CAZD;AAwBA,aAAeN,IAAI,CAACE,IAAD,CAAnB;;ACrBA,IAAMjB,WAAS,GAAG,SAAZA,SAAY,OAAqB;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXQ,IAAW,QAAXA,IAAW;AACnC,MAAMS,OAAO,GAAGT,IAAI,CAAClB,cAAL,GAAsBkB,IAAI,CAAClB,cAAL,CAAoBzF,CAA1C,GAA8CmG,KAAK,CAACiB,OAAN,CAAchB,GAA5E;AACA,MAAMiB,OAAO,GAAGV,IAAI,CAAClB,cAAL,GAAsBkB,IAAI,CAAClB,cAAL,CAAoBxF,CAA1C,GAA8CkG,KAAK,CAACkB,OAAN,CAAcjB,GAA5E;AAEA,SAAO;AACHgB,IAAAA,OAAO,EAAPA,OADG;AAEHC,IAAAA,OAAO,EAAPA,OAFG;AAGHC,IAAAA,OAAO,EAAEF,OAHN;AAIHG,IAAAA,OAAO,EAAEF;AAJN,GAAP;AAMH,CAVD;AAYA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,QAAyC;AAAA,MAAtCtG,KAAsC,SAAtCA,KAAsC;AAAA,MAA/BkB,aAA+B,SAA/BA,aAA+B;AAAA,MAAhBC,SAAgB,SAAhBA,SAAgB;AAAA,yBAClCoE,eAAe,EADmB;AAAA,MACnDH,YADmD,oBACnDA,YADmD;AAG3D,SACI,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAEJ,WADf;AAEI,IAAA,MAAM,EAAEhF,KAAK,CAACgE,GAAN,CAAU,UAAArB,IAAI;AAAA,aAAK;AACvB6C,QAAAA,GAAG,EAAE7C,IAAI,CAAC9C,EADa;AAEvB4F,QAAAA,IAAI,EAAE9C,IAFiB;AAGvBsC,QAAAA,KAAK,EAAE;AACHiB,UAAAA,OAAO,EAAEb,MAAM,CAAC1C,IAAI,CAAC1C,MAAL,CAAYnB,CAAb,EAAgBsG,YAAhB,CADZ;AAEHe,UAAAA,OAAO,EAAEd,MAAM,CAAC1C,IAAI,CAAC1C,MAAL,CAAYlB,CAAb,EAAgBqG,YAAhB,CAFZ;AAGHgB,UAAAA,OAAO,EAAEf,MAAM,CAAC1C,IAAI,CAACzC,MAAL,CAAYpB,CAAb,EAAgBsG,YAAhB,CAHZ;AAIHiB,UAAAA,OAAO,EAAEhB,MAAM,CAAC1C,IAAI,CAACzC,MAAL,CAAYnB,CAAb,EAAgBqG,YAAhB;AAJZ;AAHgB,OAAL;AAAA,KAAd;AAFZ,KAaK,UAAAM,kBAAkB;AAAA,WACf,0CACKA,kBAAkB,CAAC1B,GAAnB,CAAuB,iBAAgC;AAAA,UAA7BwB,GAA6B,SAA7BA,GAA6B;AAAA,UAAxBP,KAAwB,SAAxBA,KAAwB;AAAA,UAAXtC,IAAW,SAAjB8C,IAAiB;AACpD,aACI,oBAACQ,MAAD;AACI,QAAA,GAAG,EAAET,GADT;AAEI,QAAA,IAAI,EAAE7C,IAFV;AAGI,QAAA,KAAK,EAAExB,SAAS,CAACwB,IAAD,CAHpB;AAII,QAAA,SAAS,EAAEzB,aAAa,CAACyB,IAAD,CAJ5B;AAKI,QAAA,OAAO,EAAEsC,KAAK,CAACiB,OALnB;AAMI,QAAA,OAAO,EAAEjB,KAAK,CAACkB,OANnB;AAOI,QAAA,OAAO,EAAElB,KAAK,CAACmB,OAPnB;AAQI,QAAA,OAAO,EAAEnB,KAAK,CAACoB;AARnB,QADJ;AAYH,KAbA,CADL,CADe;AAAA,GAbvB,CADJ;AAkCH,CArCD;AA6CA,sBAAeN,IAAI,CAACO,aAAD,CAAnB;;AC3DA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAyC;AAAA,MAAtCvG,KAAsC,QAAtCA,KAAsC;AAAA,MAA/BkB,aAA+B,QAA/BA,aAA+B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACzD,SAAOnB,KAAK,CAACgE,GAAN,CAAU,UAAArB,IAAI,EAAI;AACrB,WACI,oBAACsD,MAAD;AACI,MAAA,GAAG,EAAEtD,IAAI,CAAC9C,EADd;AAEI,MAAA,IAAI,EAAE8C,IAFV;AAGI,MAAA,KAAK,EAAExB,SAAS,CAACwB,IAAD,CAHpB;AAII,MAAA,SAAS,EAAEzB,aAAa,CAACyB,IAAD,CAJ5B;AAKI,MAAA,OAAO,EAAEA,IAAI,CAAC1C,MAAL,CAAYnB,CALzB;AAMI,MAAA,OAAO,EAAE6D,IAAI,CAAC1C,MAAL,CAAYlB,CANzB;AAOI,MAAA,OAAO,EAAE4D,IAAI,CAACzC,MAAL,CAAYpB,CAPzB;AAQI,MAAA,OAAO,EAAE6D,IAAI,CAACzC,MAAL,CAAYnB;AARzB,MADJ;AAYH,GAbM,CAAP;AAcH,CAfD;AAuBA,oBAAegH,IAAI,CAACQ,WAAD,CAAnB;;AC/BA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,MAAG3H,IAAH,QAAGA,IAAH;AAAA,MAAS4H,MAAT,QAASA,MAAT;AAAA,MAAiBC,OAAjB,QAAiBA,OAAjB;AAAA,SACvB,oBAAC,YAAD;AACI,IAAA,EAAE,EAAE7H,IAAI,CAACgB,EADb;AAEI,IAAA,UAAU,EAAE,IAFhB;AAGI,IAAA,KAAK,EAAEhB,IAAI,CAACI,KAHhB;AAII,IAAA,MAAM,EAAEwH,MAJZ;AAKI,IAAA,aAAa,EAAE,OAAOC,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACC,IAAR,CAAa,IAAb,qBAAwB9H,IAAxB,EAAhC,GAAkE;AALrF,IADuB;AAAA,CAA3B;AAmBA,2BAAekH,IAAI,CAACS,kBAAD,CAAnB;;ACHA,IAAMI,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AAAA,MAEjBC,KAFiB,GA2BjBD,KA3BiB,CAEjBC,KAFiB;AAAA,MAGjBC,MAHiB,GA2BjBF,KA3BiB,CAGjBE,MAHiB;AAAA,MAITC,aAJS,GA2BjBH,KA3BiB,CAIjBI,MAJiB;AAAA,MAMVC,QANU,GA2BjBL,KA3BiB,CAMjBpH,KANiB;AAAA,MAOV0H,QAPU,GA2BjBN,KA3BiB,CAOjB7G,KAPiB;AAAA,MASjBO,YATiB,GA2BjBsG,KA3BiB,CASjBtG,YATiB;AAAA,MAUjBE,WAViB,GA2BjBoG,KA3BiB,CAUjBpG,WAViB;AAAA,MAWjBC,WAXiB,GA2BjBmG,KA3BiB,CAWjBnG,WAXiB;AAAA,MAYjBC,WAZiB,GA2BjBkG,KA3BiB,CAYjBlG,WAZiB;AAAA,MAajBC,UAbiB,GA2BjBiG,KA3BiB,CAajBjG,UAbiB;AAAA,MAejBT,MAfiB,GA2BjB0G,KA3BiB,CAejB1G,MAfiB;AAAA,MAiBjBU,SAjBiB,GA2BjBgG,KA3BiB,CAiBjBhG,SAjBiB;AAAA,MAkBjBC,eAlBiB,GA2BjB+F,KA3BiB,CAkBjB/F,eAlBiB;AAAA,MAmBjBC,eAnBiB,GA2BjB8F,KA3BiB,CAmBjB9F,eAnBiB;AAAA,MAoBjBE,aApBiB,GA2BjB4F,KA3BiB,CAoBjB5F,aApBiB;AAAA,MAsBjBC,aAtBiB,GA2BjB2F,KA3BiB,CAsBjB3F,aAtBiB;AAAA,MAuBjBC,SAvBiB,GA2BjB0F,KA3BiB,CAuBjB1F,SAvBiB;AAAA,MAwBjBuF,OAxBiB,GA2BjBG,KA3BiB,CAwBjBH,OAxBiB;AAAA,MAyBjBtF,aAzBiB,GA2BjByF,KA3BiB,CAyBjBzF,aAzBiB;AAAA,MA0BjBG,IA1BiB,GA2BjBsF,KA3BiB,CA0BjBtF,IA1BiB;AAAA,uBA6BgD6F,aAAa,CAC9EN,KAD8E,EAE9EC,MAF8E,EAG9EC,aAH8E,CA7B7D;AAAA,MA6BbC,MA7Ba,kBA6BbA,MA7Ba;AAAA,MA6BLI,UA7BK,kBA6BLA,UA7BK;AAAA,MA6BOC,WA7BP,kBA6BOA,WA7BP;AAAA,MA6BoBC,UA7BpB,kBA6BoBA,UA7BpB;AAAA,MA6BgCC,WA7BhC,kBA6BgCA,WA7BhC;AAAA,yBAmCDjC,eAAe,EAnCd;AAAA,MAmCbxD,OAnCa,oBAmCbA,OAnCa;AAoCrB,MAAM0F,KAAK,GAAGC,QAAQ,EAAtB;AACA,MAAMC,QAAQ,GAAGhD,YAAY,CAAC9D,SAAD,CAA7B;AACA,MAAM+G,gBAAgB,GAAG/C,gBAAgB,CAAC5D,aAAD,CAAzC;AACA,MAAM4G,cAAc,GAAGC,iBAAiB,CAAC/G,eAAD,EAAkB0G,KAAlB,CAAxC;AACA,MAAMM,gBAAgB,GAAGjD,gBAAgB,CAAC5D,aAAD,CAAzC;AACA,MAAM8G,YAAY,GAAGF,iBAAiB,CAAC3G,SAAD,EAAYsG,KAAZ,CAAtC;AAzCqB,oBA2CElE,UAAU,CAAC;AAC9B9D,IAAAA,KAAK,EAAEyH,QADuB;AAE9BlH,IAAAA,KAAK,EAAEmH,QAFuB;AAG9B5G,IAAAA,YAAY,EAAZA,YAH8B;AAI9BE,IAAAA,WAAW,EAAXA,WAJ8B;AAK9BC,IAAAA,WAAW,EAAXA,WAL8B;AAM9BC,IAAAA,WAAW,EAAXA,WAN8B;AAO9BC,IAAAA,UAAU,EAAVA,UAP8B;AAQ9B2B,IAAAA,MAAM,EAAE,CAAC8E,UAAU,GAAG,CAAd,EAAiBC,WAAW,GAAG,CAA/B;AARsB,GAAD,CA3CZ;AAAA;AAAA,MA2Cd7H,KA3Cc;AAAA,MA2CPO,KA3CO;AAAA,oBAsDyBiI,UAAU,EAtDnC;AAAA,MAsDbC,oBAtDa,eAsDbA,oBAtDa;AAAA,MAsDSC,WAtDT,eAsDSA,WAtDT;AAwDrB,MAAM9I,eAAe,GAAG+I,WAAW,CAC/B,UAACvJ,IAAD,EAAOU,KAAP,EAAiB;AACb2I,IAAAA,oBAAoB,CAAC,oBAAC1B,oBAAD;AAAoB,MAAA,IAAI,EAAE3H,IAA1B;AAAgC,MAAA,OAAO,EAAE6H;AAAzC,MAAD,EAAuDnH,KAAvD,CAApB;AACH,GAH8B,EAI/B,CAAC2I,oBAAD,EAAuBxB,OAAvB,CAJ+B,CAAnC;AAOA,MAAMpH,eAAe,GAAG8I,WAAW,CAAC,YAAM;AACtCD,IAAAA,WAAW;AACd,GAFkC,EAEhC,CAACA,WAAD,CAFgC,CAAnC;AAIA,MAAME,SAAS,GAAG;AACdrI,IAAAA,KAAK,EAAE2F,KAAK,CAACC,aAAN,CAAoB7D,OAAO,KAAK,IAAZ,GAAmBuE,eAAnB,GAAmCC,aAAvD,EAAoE;AACvEf,MAAAA,GAAG,EAAE,OADkE;AAEvExF,MAAAA,KAAK,EAALA,KAFuE;AAGvEkB,MAAAA,aAAa,EAAE6G,gBAHwD;AAIvE5G,MAAAA,SAAS,EAAE6G;AAJ4D,KAApE,CADO;AAOdvI,IAAAA,KAAK,EAAEkG,KAAK,CAACC,aAAN,CAAoB7D,OAAO,KAAK,IAAZ,GAAmBuD,eAAnB,GAAmCU,aAAvD,EAAoE;AACvER,MAAAA,GAAG,EAAE,OADkE;AAEvE/F,MAAAA,KAAK,EAALA,KAFuE;AAGvER,MAAAA,KAAK,EAAE0I,QAHgE;AAIvEzI,MAAAA,WAAW,EAAE4B,eAJ0D;AAKvE3B,MAAAA,WAAW,EAAE0I,cAL0D;AAMvE5G,MAAAA,aAAa,EAAE2G,gBANwD;AAOvEvI,MAAAA,eAAe,EAAE+B,aAAa,GAAG/B,eAAH,GAAqBiJ,SAPoB;AAQvEhJ,MAAAA,eAAe,EAAE8B,aAAa,GAAG9B,eAAH,GAAqBgJ;AARoB,KAApE;AAPO,GAAlB;AAmBA,SACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEf,UAAnB;AAA+B,IAAA,MAAM,EAAEC,WAAvC;AAAoD,IAAA,MAAM,EAAEP,MAA5D;AAAoE,IAAA,IAAI,EAAE1F;AAA1E,KACKpB,MAAM,CAAC6D,GAAP,CAAW,UAACuE,KAAD,EAAQC,CAAR,EAAc;AACtB,QAAI,OAAOD,KAAP,KAAiB,UAArB,EAAiC;AAC7B,aACI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEC;AAAf,SACKD,KAAK,mCACC1B,KADD;AAEFQ,QAAAA,UAAU,EAAVA,UAFE;AAGFC,QAAAA,WAAW,EAAXA,WAHE;AAIF7H,QAAAA,KAAK,EAALA,KAJE;AAKFO,QAAAA,KAAK,EAALA;AALE,SADV,CADJ;AAWH;AAED,WAAOqI,SAAS,CAACE,KAAD,CAAhB;AACH,GAhBA,CADL,CADJ;AAqBH,CA3GD;AA8GA3B,OAAO,CAAC6B,YAAR,GAAuB3G,mBAAvB;AAEA,gBAAe4G,aAAa,CAAC9B,OAAD,CAA5B;;ICxHM+B,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA9B,KAAK;AAAA,SAC3B,oBAAC,iBAAD,QACK;AAAA,QAAGC,KAAH,QAAGA,KAAH;AAAA,QAAUC,MAAV,QAAUA,MAAV;AAAA,WAAuB,oBAACH,SAAD;AAAS,MAAA,KAAK,EAAEE,KAAhB;AAAuB,MAAA,MAAM,EAAEC;AAA/B,OAA2CF,KAA3C,EAAvB;AAAA,GADL,CAD2B;AAAA;;ACE/B,IAAM+B,aAAa,GAAG,SAAhBA,aAAgB,CAAA/B,KAAK,EAAI;AAAA,MAEvBC,KAFuB,GA2BvBD,KA3BuB,CAEvBC,KAFuB;AAAA,MAGvBC,MAHuB,GA2BvBF,KA3BuB,CAGvBE,MAHuB;AAAA,MAIfC,aAJe,GA2BvBH,KA3BuB,CAIvBI,MAJuB;AAAA,MAKvBvF,UALuB,GA2BvBmF,KA3BuB,CAKvBnF,UALuB;AAAA,MAOhBwF,QAPgB,GA2BvBL,KA3BuB,CAOvBpH,KAPuB;AAAA,MAQhB0H,QARgB,GA2BvBN,KA3BuB,CAQvB7G,KARuB;AAAA,MAUvBO,YAVuB,GA2BvBsG,KA3BuB,CAUvBtG,YAVuB;AAAA,MAWvBE,WAXuB,GA2BvBoG,KA3BuB,CAWvBpG,WAXuB;AAAA,MAYvBC,WAZuB,GA2BvBmG,KA3BuB,CAYvBnG,WAZuB;AAAA,MAavBC,WAbuB,GA2BvBkG,KA3BuB,CAavBlG,WAbuB;AAAA,MAcvBC,UAduB,GA2BvBiG,KA3BuB,CAcvBjG,UAduB;AAAA,MAgBvBT,MAhBuB,GA2BvB0G,KA3BuB,CAgBvB1G,MAhBuB;AAAA,MAkBvBU,SAlBuB,GA2BvBgG,KA3BuB,CAkBvBhG,SAlBuB;AAAA,MAmBvBC,eAnBuB,GA2BvB+F,KA3BuB,CAmBvB/F,eAnBuB;AAAA,MAoBvBC,eApBuB,GA2BvB8F,KA3BuB,CAoBvB9F,eApBuB;AAAA,MAqBvBE,aArBuB,GA2BvB4F,KA3BuB,CAqBvB5F,aArBuB;AAAA,MAuBvBC,aAvBuB,GA2BvB2F,KA3BuB,CAuBvB3F,aAvBuB;AAAA,MAwBvBC,SAxBuB,GA2BvB0F,KA3BuB,CAwBvB1F,SAxBuB;AAAA,MA0BvBC,aA1BuB,GA2BvByF,KA3BuB,CA0BvBzF,aA1BuB;AA6B3B,MAAMyH,QAAQ,GAAGC,MAAM,CAAC,IAAD,CAAvB;AA7B2B,uBA8B0C1B,aAAa,CAC9EN,KAD8E,EAE9EC,MAF8E,EAG9EC,aAH8E,CA9BvD;AAAA,MA8BnBC,MA9BmB,kBA8BnBA,MA9BmB;AAAA,MA8BXI,UA9BW,kBA8BXA,UA9BW;AAAA,MA8BCC,WA9BD,kBA8BCA,WA9BD;AAAA,MA8BcC,UA9Bd,kBA8BcA,UA9Bd;AAAA,MA8B0BC,WA9B1B,kBA8B0BA,WA9B1B;AAAA,oBAoCJjE,UAAU,CAAC;AAC9B9D,IAAAA,KAAK,EAAEyH,QADuB;AAE9BlH,IAAAA,KAAK,EAAEmH,QAFuB;AAG9B5G,IAAAA,YAAY,EAAZA,YAH8B;AAI9BE,IAAAA,WAAW,EAAXA,WAJ8B;AAK9BC,IAAAA,WAAW,EAAXA,WAL8B;AAM9BC,IAAAA,WAAW,EAAXA,WAN8B;AAO9BC,IAAAA,UAAU,EAAVA,UAP8B;AAQ9B2B,IAAAA,MAAM,EAAE,CAAC8E,UAAU,GAAG,CAAd,EAAiBC,WAAW,GAAG,CAA/B;AARsB,GAAD,CApCN;AAAA;AAAA,MAoCpB7H,KApCoB;AAAA,MAoCbO,KApCa;AA+C3B,MAAMyH,KAAK,GAAGC,QAAQ,EAAtB;AACA,MAAMqB,YAAY,GAAGpE,YAAY,CAAC9D,SAAD,CAAjC;AACA,MAAM+G,gBAAgB,GAAG/C,gBAAgB,CAAC5D,aAAD,CAAzC;AACA,MAAM4G,cAAc,GAAGC,iBAAiB,CAAC/G,eAAD,EAAkB0G,KAAlB,CAAxC;AACA,MAAMM,gBAAgB,GAAGjD,gBAAgB,CAAC5D,aAAD,CAAzC;AACA,MAAM8G,YAAY,GAAGF,iBAAiB,CAAC3G,SAAD,EAAYsG,KAAZ,CAAtC;AAEA5D,EAAAA,SAAS,CAAC,YAAM;AACZgF,IAAAA,QAAQ,CAACG,OAAT,CAAiBlC,KAAjB,GAAyBS,UAAU,GAAG7F,UAAtC;AACAmH,IAAAA,QAAQ,CAACG,OAAT,CAAiBjC,MAAjB,GAA0BS,WAAW,GAAG9F,UAAxC;AAEA,QAAMuH,GAAG,GAAGJ,QAAQ,CAACG,OAAT,CAAiBE,UAAjB,CAA4B,IAA5B,CAAZ;AAEAD,IAAAA,GAAG,CAAC7J,KAAJ,CAAUsC,UAAV,EAAsBA,UAAtB;AAEAuH,IAAAA,GAAG,CAACE,SAAJ,GAAgB1B,KAAK,CAAC2B,UAAtB;AACAH,IAAAA,GAAG,CAACI,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB9B,UAAnB,EAA+BC,WAA/B;AACAyB,IAAAA,GAAG,CAACK,SAAJ,CAAcrC,MAAM,CAACsC,IAArB,EAA2BtC,MAAM,CAACuC,GAAlC;AAEArJ,IAAAA,MAAM,CAACsJ,OAAP,CAAe,UAAAlB,KAAK,EAAI;AACpB,UAAIA,KAAK,KAAK,OAAd,EAAuB;AACnBvI,QAAAA,KAAK,CAACyJ,OAAN,CAAc,UAAA9G,IAAI,EAAI;AAClBsG,UAAAA,GAAG,CAACS,WAAJ,GAAkB1B,YAAY,CAACrF,IAAD,CAA9B;AACAsG,UAAAA,GAAG,CAACU,SAAJ,GAAgB5B,gBAAgB,CAACpF,IAAD,CAAhC;AACAsG,UAAAA,GAAG,CAACW,SAAJ;AACAX,UAAAA,GAAG,CAACY,MAAJ,CAAWlH,IAAI,CAAC1C,MAAL,CAAYnB,CAAvB,EAA0B6D,IAAI,CAAC1C,MAAL,CAAYlB,CAAtC;AACAkK,UAAAA,GAAG,CAACa,MAAJ,CAAWnH,IAAI,CAACzC,MAAL,CAAYpB,CAAvB,EAA0B6D,IAAI,CAACzC,MAAL,CAAYnB,CAAtC;AACAkK,UAAAA,GAAG,CAACc,MAAJ;AACH,SAPD;AAQH,OATD,MASO,IAAIxB,KAAK,KAAK,OAAd,EAAuB;AAC1B9I,QAAAA,KAAK,CAACgK,OAAN,CAAc,UAAA5K,IAAI,EAAI;AAClBoK,UAAAA,GAAG,CAACE,SAAJ,GAAgBJ,YAAY,CAAClK,IAAD,CAA5B;AACAoK,UAAAA,GAAG,CAACW,SAAJ;AACAX,UAAAA,GAAG,CAACe,GAAJ,CAAQnL,IAAI,CAACC,CAAb,EAAgBD,IAAI,CAACE,CAArB,EAAwBF,IAAI,CAACG,MAA7B,EAAqC,CAArC,EAAwC,IAAI6G,IAAI,CAACoE,EAAjD;AACAhB,UAAAA,GAAG,CAACiB,IAAJ;AAEA,cAAIpJ,eAAe,GAAG,CAAtB,EAAyB;AACrBmI,YAAAA,GAAG,CAACS,WAAJ,GAAkB7B,cAAc,CAAChJ,IAAD,CAAhC;AACAoK,YAAAA,GAAG,CAACU,SAAJ,GAAgB7I,eAAhB;AACAmI,YAAAA,GAAG,CAACc,MAAJ;AACH;AACJ,SAXD;AAYH,OAbM,MAaA,IAAI,OAAOxB,KAAP,KAAiB,UAArB,EAAiC;AACpCA,QAAAA,KAAK,CAACU,GAAD,oCACEpC,KADF;AAEDpH,UAAAA,KAAK,EAALA,KAFC;AAGDO,UAAAA,KAAK,EAALA;AAHC,WAAL;AAKH;AACJ,KA9BD;AA+BH,GA3CQ,EA2CN,CACC6I,QADD,EAECtB,UAFD,EAGCC,WAHD,EAICrH,MAJD,EAKCsH,KALD,EAMChI,KAND,EAOCO,KAPD,EAQC+I,YARD,EASCnB,gBATD,EAUC9G,eAVD,EAWC+G,cAXD,EAYCE,gBAZD,EAaCC,YAbD,CA3CM,CAAT;AA2DA,SACI;AACI,IAAA,GAAG,EAAEa,QADT;AAEI,IAAA,KAAK,EAAEtB,UAAU,GAAG7F,UAFxB;AAGI,IAAA,MAAM,EAAE8F,WAAW,GAAG9F,UAH1B;AAII,IAAA,KAAK,EAAE;AACHoF,MAAAA,KAAK,EAAES,UADJ;AAEHR,MAAAA,MAAM,EAAES,WAFL;AAGH2C,MAAAA,MAAM,EAAE/I,aAAa,GAAG,MAAH,GAAY;AAH9B;AAJX,IADJ;AAYH,CA7HD;AAgIAwH,aAAa,CAACH,YAAd,GAA6BvG,yBAA7B;AAEA,sBAAewG,aAAa,CAACE,aAAD,CAA5B;;ICpIMwB,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAvD,KAAK;AAAA,SACjC,oBAAC,iBAAD,QACK;AAAA,QAAGC,KAAH,QAAGA,KAAH;AAAA,QAAUC,MAAV,QAAUA,MAAV;AAAA,WAAuB,oBAAC6B,eAAD;AAAe,MAAA,KAAK,EAAE9B,KAAtB;AAA6B,MAAA,MAAM,EAAEC;AAArC,OAAiDF,KAAjD,EAAvB;AAAA,GADL,CADiC;AAAA;;;;"}
\ No newline at end of file
diff --git a/node_modules/@nivo/network/dist/nivo-network.umd.js b/node_modules/@nivo/network/dist/nivo-network.umd.js
index 5aca918..637e428 100644
--- a/node_modules/@nivo/network/dist/nivo-network.umd.js
+++ b/node_modules/@nivo/network/dist/nivo-network.umd.js
@@ -106,6 +106,34 @@
     return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
   }
 
+  var Node = function Node(_ref) {
+    var node = _ref.node,
+        x = _ref.x,
+        y = _ref.y,
+        radius = _ref.radius,
+        color = _ref.color,
+        borderWidth = _ref.borderWidth,
+        borderColor = _ref.borderColor,
+        _ref$scale = _ref.scale,
+        scale = _ref$scale === void 0 ? 1 : _ref$scale,
+        handleNodeHover = _ref.handleNodeHover,
+        handleNodeLeave = _ref.handleNodeLeave;
+    return React__default.createElement("circle", {
+      transform: "translate(".concat(x, ",").concat(y, ") scale(").concat(scale, ")"),
+      r: radius,
+      fill: color,
+      strokeWidth: borderWidth,
+      stroke: borderColor,
+      onMouseEnter: function onMouseEnter(event) {
+        return handleNodeHover(node, event);
+      },
+      onMouseMove: function onMouseMove(event) {
+        return handleNodeHover(node, event);
+      },
+      onMouseLeave: handleNodeLeave
+    });
+  };
+
   var commonPropTypes = {
     nodes: PropTypes.arrayOf(PropTypes.shape({
       id: PropTypes.string.isRequired
@@ -123,6 +151,7 @@
     nodeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,
     nodeBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,
     nodeBorderColor: colors.inheritedColorPropType.isRequired,
+    nodeComponent: PropTypes.func.isRequired,
     linkThickness: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,
     linkColor: colors.inheritedColorPropType.isRequired,
     isInteractive: PropTypes.bool.isRequired
@@ -140,6 +169,7 @@
     distanceMin: 1,
     distanceMax: Infinity,
     iterations: 90,
+    nodeComponent: Node,
     nodeBorderWidth: 0,
     nodeBorderColor: {
       from: 'color'
@@ -246,6 +276,14 @@
       };
     }, [color]);
   };
+  var useNodeComponent = function useNodeComponent(nodeComponent) {
+    return React.useMemo(function () {
+      if (typeof nodeComponent === 'function') return nodeComponent;
+      return function () {
+        return nodeComponent;
+      };
+    }, [nodeComponent]);
+  };
   var useLinkThickness = function useLinkThickness(thickness) {
     return React.useMemo(function () {
       if (typeof thickness === 'function') return thickness;
@@ -255,35 +293,6 @@
     }, [thickness]);
   };
 
-  var Node = function Node(_ref) {
-    var node = _ref.node,
-        x = _ref.x,
-        y = _ref.y,
-        radius = _ref.radius,
-        color = _ref.color,
-        borderWidth = _ref.borderWidth,
-        borderColor = _ref.borderColor,
-        _ref$scale = _ref.scale,
-        scale = _ref$scale === void 0 ? 1 : _ref$scale,
-        handleNodeHover = _ref.handleNodeHover,
-        handleNodeLeave = _ref.handleNodeLeave;
-    return React__default.createElement("circle", {
-      transform: "translate(".concat(x, ",").concat(y, ") scale(").concat(scale, ")"),
-      r: radius,
-      fill: color,
-      strokeWidth: borderWidth,
-      stroke: borderColor,
-      onMouseEnter: function onMouseEnter(event) {
-        return handleNodeHover(node, event);
-      },
-      onMouseMove: function onMouseMove(event) {
-        return handleNodeHover(node, event);
-      },
-      onMouseLeave: handleNodeLeave
-    });
-  };
-  var Node$1 = React.memo(Node);
-
   var willEnter = function willEnter(_ref) {
     var style = _ref.style;
     return {
@@ -310,7 +319,8 @@
         borderWidth = _ref3.borderWidth,
         borderColor = _ref3.borderColor,
         handleNodeHover = _ref3.handleNodeHover,
-        handleNodeLeave = _ref3.handleNodeLeave;
+        handleNodeLeave = _ref3.handleNodeLeave,
+        nodeComponent = _ref3.nodeComponent;
     var _useMotionConfig = core.useMotionConfig(),
         springConfig = _useMotionConfig.springConfig;
     return React__default.createElement(reactMotion.TransitionMotion, {
@@ -333,7 +343,7 @@
         var key = _ref4.key,
             style = _ref4.style,
             node = _ref4.data;
-        return React__default.createElement(Node$1, {
+        return React__default.createElement(nodeComponent, {
           key: key,
           node: node,
           x: style.x,
@@ -342,7 +352,6 @@
           color: color(node),
           borderWidth: borderWidth,
           borderColor: borderColor(node),
-          scale: Math.max(style.scale, 0),
           handleNodeHover: handleNodeHover,
           handleNodeLeave: handleNodeLeave
         });
@@ -357,9 +366,10 @@
         borderWidth = _ref.borderWidth,
         borderColor = _ref.borderColor,
         handleNodeHover = _ref.handleNodeHover,
-        handleNodeLeave = _ref.handleNodeLeave;
+        handleNodeLeave = _ref.handleNodeLeave,
+        nodeComponent = _ref.nodeComponent;
     return nodes.map(function (node) {
-      return React__default.createElement(Node$1, {
+      return React__default.createElement(nodeComponent, {
         key: node.id,
         node: node,
         x: node.x,
@@ -494,6 +504,7 @@
         nodeColor = props.nodeColor,
         nodeBorderWidth = props.nodeBorderWidth,
         nodeBorderColor = props.nodeBorderColor,
+        nodeComponent = props.nodeComponent,
         linkThickness = props.linkThickness,
         linkColor = props.linkColor,
         tooltip$1 = props.tooltip,
@@ -509,6 +520,7 @@
         animate = _useMotionConfig.animate;
     var theme = core.useTheme();
     var getColor = useNodeColor(nodeColor);
+    var getNodeComponent = useNodeComponent(nodeComponent);
     var getBorderColor = colors.useInheritedColor(nodeBorderColor, theme);
     var getLinkThickness = useLinkThickness(linkThickness);
     var getLinkColor = colors.useInheritedColor(linkColor, theme);
@@ -550,6 +562,7 @@
         color: getColor,
         borderWidth: nodeBorderWidth,
         borderColor: getBorderColor,
+        nodeComponent: getNodeComponent,
         handleNodeHover: isInteractive ? handleNodeHover : undefined,
         handleNodeLeave: isInteractive ? handleNodeLeave : undefined
       })
@@ -603,6 +616,7 @@
         nodeColor = props.nodeColor,
         nodeBorderWidth = props.nodeBorderWidth,
         nodeBorderColor = props.nodeBorderColor,
+        nodeComponent = props.nodeComponent,
         linkThickness = props.linkThickness,
         linkColor = props.linkColor,
         isInteractive = props.isInteractive;
@@ -628,6 +642,7 @@
         links = _useNetwork2[1];
     var theme = core.useTheme();
     var getNodeColor = useNodeColor(nodeColor);
+    var getNodeComponent = useNodeComponent(nodeComponent);
     var getBorderColor = colors.useInheritedColor(nodeBorderColor, theme);
     var getLinkThickness = useLinkThickness(linkThickness);
     var getLinkColor = colors.useInheritedColor(linkColor, theme);
@@ -668,7 +683,7 @@
           }));
         }
       });
-    }, [canvasEl, outerWidth, outerHeight, layers, theme, nodes, links, getNodeColor, nodeBorderWidth, getBorderColor, getLinkThickness, getLinkColor]);
+    }, [canvasEl, outerWidth, outerHeight, layers, theme, nodes, links, getNodeColor, getNodeComponent, nodeBorderWidth, getBorderColor, getLinkThickness, getLinkColor]);
     return React__default.createElement("canvas", {
       ref: canvasEl,
       width: outerWidth * pixelRatio,
@@ -705,6 +720,7 @@
   exports.useLinkThickness = useLinkThickness;
   exports.useNetwork = useNetwork;
   exports.useNodeColor = useNodeColor;
+  exports.useNodeComponent = useNodeComponent;
 
   Object.defineProperty(exports, '__esModule', { value: true });
 
diff --git a/node_modules/@nivo/network/dist/nivo-network.umd.js.map b/node_modules/@nivo/network/dist/nivo-network.umd.js.map
index 73944a3..dab83e6 100644
--- a/node_modules/@nivo/network/dist/nivo-network.umd.js.map
+++ b/node_modules/@nivo/network/dist/nivo-network.umd.js.map
@@ -1 +1 @@
-{"version":3,"file":"nivo-network.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/props.js","../src/hooks.js","../src/Node.js","../src/AnimatedNodes.js","../src/StaticNodes.js","../src/Link.js","../src/AnimatedLinks.js","../src/StaticLinks.js","../src/NetworkNodeTooltip.js","../src/Network.js","../src/ResponsiveNetwork.js","../src/NetworkCanvas.js","../src/ResponsiveNetworkCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\n\nconst commonPropTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    links: PropTypes.arrayOf(\n        PropTypes.shape({\n            source: PropTypes.string.isRequired,\n            target: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['links', 'nodes']), PropTypes.func])\n    ).isRequired,\n\n    linkDistance: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.number])\n        .isRequired,\n    repulsivity: PropTypes.number.isRequired,\n    distanceMin: PropTypes.number.isRequired,\n    distanceMax: PropTypes.number.isRequired,\n    iterations: PropTypes.number.isRequired,\n\n    nodeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    nodeBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    nodeBorderColor: inheritedColorPropType.isRequired,\n\n    linkThickness: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    linkColor: inheritedColorPropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n}\n\nexport const NetworkPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n    ...motionPropTypes,\n}\n\nexport const NetworkCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    layers: ['links', 'nodes'],\n\n    linkDistance: 30,\n    repulsivity: 10,\n    distanceMin: 1,\n    distanceMax: Infinity,\n    iterations: 90,\n\n    nodeBorderWidth: 0,\n    nodeBorderColor: { from: 'color' },\n\n    linkThickness: 1,\n    linkColor: { from: 'source.color' },\n\n    isInteractive: true,\n}\n\nexport const NetworkDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    role: 'img',\n}\n\nexport const NetworkCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useState, useEffect, useMemo } from 'react'\nimport get from 'lodash/get'\nimport isString from 'lodash/isString'\nimport isNumber from 'lodash/isNumber'\nimport { forceSimulation, forceManyBody, forceCenter, forceLink } from 'd3-force'\n\nconst computeForces = ({ linkDistance, repulsivity, distanceMin, distanceMax, center }) => {\n    let computedLinkDistance\n    if (typeof linkDistance === 'function') {\n        computedLinkDistance = linkDistance\n    } else if (isNumber(linkDistance)) {\n        computedLinkDistance = linkDistance\n    } else if (isString(linkDistance)) {\n        computedLinkDistance = link => get(link, linkDistance)\n    }\n\n    const linkForce = forceLink()\n        .id(d => d.id)\n        .distance(computedLinkDistance)\n\n    const chargeForce = forceManyBody()\n        .strength(-repulsivity)\n        .distanceMin(distanceMin)\n        .distanceMax(distanceMax)\n\n    const centerForce = forceCenter(center[0], center[1])\n\n    return { link: linkForce, charge: chargeForce, center: centerForce }\n}\n\nexport const useNetwork = ({\n    nodes,\n    links,\n    linkDistance,\n    repulsivity,\n    distanceMin,\n    distanceMax,\n    center,\n    iterations,\n}) => {\n    const [currentNodes, setCurrentNodes] = useState([])\n    const [currentLinks, setCurrentLinks] = useState([])\n\n    useEffect(() => {\n        const forces = computeForces({\n            linkDistance,\n            repulsivity,\n            distanceMin,\n            distanceMax,\n            center,\n        })\n\n        const nodesCopy = nodes.map(node => ({ ...node }))\n        const linksCopy = links.map(link => ({\n            id: `${link.source}.${link.target}`,\n            ...link,\n        }))\n\n        const simulation = forceSimulation(nodesCopy)\n            .force('link', forces.link.links(linksCopy))\n            .force('charge', forces.charge)\n            .force('center', forces.center)\n            .stop()\n\n        simulation.tick(iterations)\n\n        setCurrentNodes(nodesCopy)\n        setCurrentLinks(\n            linksCopy.map(link => {\n                link.previousSource = currentNodes.find(n => n.id === link.source.id)\n                link.previousTarget = currentNodes.find(n => n.id === link.target.id)\n\n                return link\n            })\n        )\n\n        return () => {\n            simulation.stop()\n        }\n    }, [\n        nodes,\n        links,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center[0],\n        center[1],\n    ])\n\n    return [currentNodes, currentLinks]\n}\n\nexport const useNodeColor = color =>\n    useMemo(() => {\n        if (typeof color === 'function') return color\n        return () => color\n    }, [color])\n\nexport const useLinkThickness = thickness =>\n    useMemo(() => {\n        if (typeof thickness === 'function') return thickness\n        return () => thickness\n    }, [thickness])\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Node = ({\n    node,\n    x,\n    y,\n    radius,\n    color,\n    borderWidth,\n    borderColor,\n    scale = 1,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    return (\n        <circle\n            transform={`translate(${x},${y}) scale(${scale})`}\n            r={radius}\n            fill={color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            onMouseEnter={event => handleNodeHover(node, event)}\n            onMouseMove={event => handleNodeHover(node, event)}\n            onMouseLeave={handleNodeLeave}\n        />\n    )\n}\n\nNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    radius: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    scale: PropTypes.number,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default memo(Node)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@nivo/core'\nimport Node from './Node'\n\nconst willEnter = ({ style }) => ({\n    x: style.x.val,\n    y: style.y.val,\n    radius: style.radius.val,\n    scale: 0,\n})\n\nconst willLeave = springConfig => ({ style }) => ({\n    x: style.x,\n    y: style.y,\n    radius: style.radius,\n    scale: spring(0, springConfig),\n})\n\nconst AnimatedNodes = ({\n    nodes,\n    color,\n    borderWidth,\n    borderColor,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            willLeave={willLeave(springConfig)}\n            styles={nodes.map(node => ({\n                key: node.id,\n                data: node,\n                style: {\n                    x: spring(node.x, springConfig),\n                    y: spring(node.y, springConfig),\n                    radius: spring(node.radius, springConfig),\n                    scale: spring(1, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: node }) => {\n                        return (\n                            <Node\n                                key={key}\n                                node={node}\n                                x={style.x}\n                                y={style.y}\n                                radius={Math.max(style.radius, 0)}\n                                color={color(node)}\n                                borderWidth={borderWidth}\n                                borderColor={borderColor(node)}\n                                scale={Math.max(style.scale, 0)}\n                                handleNodeHover={handleNodeHover}\n                                handleNodeLeave={handleNodeLeave}\n                            />\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Node from './Node'\n\nconst StaticNodes = ({\n    nodes,\n    color,\n    borderWidth,\n    borderColor,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    return nodes.map(node => {\n        return (\n            <Node\n                key={node.id}\n                node={node}\n                x={node.x}\n                y={node.y}\n                radius={node.radius}\n                color={color(node)}\n                borderWidth={borderWidth}\n                borderColor={borderColor(node)}\n                handleNodeHover={handleNodeHover}\n                handleNodeLeave={handleNodeLeave}\n            />\n        )\n    })\n}\n\nStaticNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ sourceX, sourceY, targetX, targetY, thickness, color }) => {\n    return (\n        <line\n            stroke={color}\n            strokeWidth={thickness}\n            strokeLinecap=\"round\"\n            x1={sourceX}\n            y1={sourceY}\n            x2={targetX}\n            y2={targetY}\n        />\n    )\n}\n\nLink.propTypes = {\n    link: PropTypes.object.isRequired,\n    sourceX: PropTypes.number.isRequired,\n    sourceY: PropTypes.number.isRequired,\n    targetX: PropTypes.number.isRequired,\n    targetY: PropTypes.number.isRequired,\n    thickness: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n}\n\nexport default memo(Link)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@nivo/core'\nimport Link from './Link'\n\nconst willEnter = ({ style, data }) => {\n    const sourceX = data.previousSource ? data.previousSource.x : style.sourceX.val\n    const sourceY = data.previousSource ? data.previousSource.y : style.sourceY.val\n\n    return {\n        sourceX,\n        sourceY,\n        targetX: sourceX,\n        targetY: sourceY,\n    }\n}\n\nconst AnimatedLinks = ({ links, linkThickness, linkColor }) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            styles={links.map(link => ({\n                key: link.id,\n                data: link,\n                style: {\n                    sourceX: spring(link.source.x, springConfig),\n                    sourceY: spring(link.source.y, springConfig),\n                    targetX: spring(link.target.x, springConfig),\n                    targetY: spring(link.target.y, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: link }) => {\n                        return (\n                            <Link\n                                key={key}\n                                link={link}\n                                color={linkColor(link)}\n                                thickness={linkThickness(link)}\n                                sourceX={style.sourceX}\n                                sourceY={style.sourceY}\n                                targetX={style.targetX}\n                                targetY={style.targetY}\n                            />\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedLinks)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Link from './Link'\n\nconst StaticLinks = ({ links, linkThickness, linkColor }) => {\n    return links.map(link => {\n        return (\n            <Link\n                key={link.id}\n                link={link}\n                color={linkColor(link)}\n                thickness={linkThickness(link)}\n                sourceX={link.source.x}\n                sourceY={link.source.y}\n                targetX={link.target.x}\n                targetY={link.target.y}\n            />\n        )\n    })\n}\n\nStaticLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticLinks)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst NetworkNodeTooltip = ({ node, format, tooltip }) => (\n    <BasicTooltip\n        id={node.id}\n        enableChip={true}\n        color={node.color}\n        format={format}\n        renderContent={typeof tooltip === 'function' ? tooltip.bind(null, { ...node }) : null}\n    />\n)\n\nNetworkNodeTooltip.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n    format: PropTypes.func,\n    tooltip: PropTypes.func,\n}\n\nexport default memo(NetworkNodeTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment, useCallback } from 'react'\nimport { withContainer, useDimensions, SvgWrapper, useTheme, useMotionConfig } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { NetworkPropTypes, NetworkDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness } from './hooks'\nimport AnimatedNodes from './AnimatedNodes'\nimport StaticNodes from './StaticNodes'\nimport AnimatedLinks from './AnimatedLinks'\nimport StaticLinks from './StaticLinks'\nimport NetworkNodeTooltip from './NetworkNodeTooltip'\n\nconst Network = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n\n        linkThickness,\n        linkColor,\n        tooltip,\n        isInteractive,\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { animate } = useMotionConfig()\n    const theme = useTheme()\n    const getColor = useNodeColor(nodeColor)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleNodeHover = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(<NetworkNodeTooltip node={node} tooltip={tooltip} />, event)\n        },\n        [showTooltipFromEvent, tooltip]\n    )\n\n    const handleNodeLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const layerById = {\n        links: React.createElement(animate === true ? AnimatedLinks : StaticLinks, {\n            key: 'links',\n            links,\n            linkThickness: getLinkThickness,\n            linkColor: getLinkColor,\n        }),\n        nodes: React.createElement(animate === true ? AnimatedNodes : StaticNodes, {\n            key: 'nodes',\n            nodes,\n            color: getColor,\n            borderWidth: nodeBorderWidth,\n            borderColor: getBorderColor,\n            handleNodeHover: isInteractive ? handleNodeHover : undefined,\n            handleNodeLeave: isInteractive ? handleNodeLeave : undefined,\n        }),\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                nodes,\n                                links,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nNetwork.propTypes = NetworkPropTypes\nNetwork.defaultProps = NetworkDefaultProps\n\nexport default withContainer(Network)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Network from './Network'\n\nconst ResponsiveNetwork = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Network width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetwork\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useRef, useEffect } from 'react'\nimport { withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { NetworkCanvasPropTypes, NetworkCanvasDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness } from './hooks'\n\nconst NetworkCanvas = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n\n        linkThickness,\n        linkColor,\n\n        isInteractive,\n    } = props\n\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const theme = useTheme()\n    const getNodeColor = useNodeColor(nodeColor)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'links') {\n                links.forEach(link => {\n                    ctx.strokeStyle = getLinkColor(link)\n                    ctx.lineWidth = getLinkThickness(link)\n                    ctx.beginPath()\n                    ctx.moveTo(link.source.x, link.source.y)\n                    ctx.lineTo(link.target.x, link.target.y)\n                    ctx.stroke()\n                })\n            } else if (layer === 'nodes') {\n                nodes.forEach(node => {\n                    ctx.fillStyle = getNodeColor(node)\n                    ctx.beginPath()\n                    ctx.arc(node.x, node.y, node.radius, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (nodeBorderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(node)\n                        ctx.lineWidth = nodeBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else if (typeof layer === 'function') {\n                layer(ctx, {\n                    ...props,\n                    nodes,\n                    links,\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        nodes,\n        links,\n        getNodeColor,\n        nodeBorderWidth,\n        getBorderColor,\n        getLinkThickness,\n        getLinkColor,\n    ])\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n        />\n    )\n}\n\nNetworkCanvas.propTypes = NetworkCanvasPropTypes\nNetworkCanvas.defaultProps = NetworkCanvasDefaultProps\n\nexport default withContainer(NetworkCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport NetworkCanvas from './NetworkCanvas'\n\nconst ResponsiveNetworkCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <NetworkCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetworkCanvas\n"],"names":["defineProperty","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","commonPropTypes","nodes","PropTypes","arrayOf","shape","id","string","isRequired","links","source","target","layers","oneOfType","oneOf","func","linkDistance","number","repulsivity","distanceMin","distanceMax","iterations","nodeColor","nodeBorderWidth","nodeBorderColor","inheritedColorPropType","linkThickness","linkColor","isInteractive","bool","NetworkPropTypes","role","motionPropTypes","NetworkCanvasPropTypes","pixelRatio","commonDefaultProps","Infinity","from","NetworkDefaultProps","animate","motionStiffness","motionDamping","NetworkCanvasDefaultProps","global","window","devicePixelRatio","computeForces","center","computedLinkDistance","isNumber","isString","link","get","linkForce","forceLink","d","distance","chargeForce","forceManyBody","strength","centerForce","forceCenter","charge","useNetwork","useState","currentNodes","setCurrentNodes","currentLinks","setCurrentLinks","useEffect","forces","nodesCopy","map","node","linksCopy","simulation","forceSimulation","force","stop","tick","previousSource","find","n","previousTarget","useNodeColor","color","useMemo","useLinkThickness","thickness","Node","x","y","radius","borderWidth","borderColor","scale","handleNodeHover","handleNodeLeave","React","event","memo","willEnter","style","val","willLeave","springConfig","spring","AnimatedNodes","useMotionConfig","TransitionMotion","key","data","interpolatedStyles","Math","max","StaticNodes","Link","sourceX","sourceY","targetX","targetY","AnimatedLinks","StaticLinks","NetworkNodeTooltip","format","tooltip","BasicTooltip","bind","Network","props","width","height","partialMargin","margin","rawNodes","rawLinks","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","theme","useTheme","getColor","getBorderColor","useInheritedColor","getLinkThickness","getLinkColor","useTooltip","showTooltipFromEvent","hideTooltip","useCallback","layerById","createElement","undefined","SvgWrapper","layer","i","Fragment","defaultProps","withContainer","ResponsiveNetwork","ResponsiveWrapper","NetworkCanvas","canvasEl","useRef","getNodeColor","current","ctx","getContext","fillStyle","background","fillRect","translate","left","top","forEach","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","arc","PI","fill","cursor","ResponsiveNetworkCanvas"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"nivo-network.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/Node.js","../src/props.js","../src/hooks.js","../src/AnimatedNodes.js","../src/StaticNodes.js","../src/Link.js","../src/AnimatedLinks.js","../src/StaticLinks.js","../src/NetworkNodeTooltip.js","../src/Network.js","../src/ResponsiveNetwork.js","../src/NetworkCanvas.js","../src/ResponsiveNetworkCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Node = ({\n    node,\n    x,\n    y,\n    radius,\n    color,\n    borderWidth,\n    borderColor,\n    scale = 1,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    return (\n        <circle\n            transform={`translate(${x},${y}) scale(${scale})`}\n            r={radius}\n            fill={color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            onMouseEnter={event => handleNodeHover(node, event)}\n            onMouseMove={event => handleNodeHover(node, event)}\n            onMouseLeave={handleNodeLeave}\n        />\n    )\n}\n\nNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    radius: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    scale: PropTypes.number,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default Node\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport Node from './Node'\n\nconst commonPropTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    links: PropTypes.arrayOf(\n        PropTypes.shape({\n            source: PropTypes.string.isRequired,\n            target: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['links', 'nodes']), PropTypes.func])\n    ).isRequired,\n\n    linkDistance: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.number])\n        .isRequired,\n    repulsivity: PropTypes.number.isRequired,\n    distanceMin: PropTypes.number.isRequired,\n    distanceMax: PropTypes.number.isRequired,\n    iterations: PropTypes.number.isRequired,\n\n    nodeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    nodeBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    nodeBorderColor: inheritedColorPropType.isRequired,\n    nodeComponent: PropTypes.func.isRequired,\n\n    linkThickness: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    linkColor: inheritedColorPropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n}\n\nexport const NetworkPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n    ...motionPropTypes,\n}\n\nexport const NetworkCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    layers: ['links', 'nodes'],\n\n    linkDistance: 30,\n    repulsivity: 10,\n    distanceMin: 1,\n    distanceMax: Infinity,\n    iterations: 90,\n\n    nodeComponent: Node,\n    nodeBorderWidth: 0,\n    nodeBorderColor: { from: 'color' },\n\n    linkThickness: 1,\n    linkColor: { from: 'source.color' },\n\n    isInteractive: true,\n}\n\nexport const NetworkDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    role: 'img',\n}\n\nexport const NetworkCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useState, useEffect, useMemo } from 'react'\nimport get from 'lodash/get'\nimport isString from 'lodash/isString'\nimport isNumber from 'lodash/isNumber'\nimport { forceSimulation, forceManyBody, forceCenter, forceLink } from 'd3-force'\n\nconst computeForces = ({ linkDistance, repulsivity, distanceMin, distanceMax, center }) => {\n    let computedLinkDistance\n    if (typeof linkDistance === 'function') {\n        computedLinkDistance = linkDistance\n    } else if (isNumber(linkDistance)) {\n        computedLinkDistance = linkDistance\n    } else if (isString(linkDistance)) {\n        computedLinkDistance = link => get(link, linkDistance)\n    }\n\n    const linkForce = forceLink()\n        .id(d => d.id)\n        .distance(computedLinkDistance)\n\n    const chargeForce = forceManyBody()\n        .strength(-repulsivity)\n        .distanceMin(distanceMin)\n        .distanceMax(distanceMax)\n\n    const centerForce = forceCenter(center[0], center[1])\n\n    return { link: linkForce, charge: chargeForce, center: centerForce }\n}\n\nexport const useNetwork = ({\n    nodes,\n    links,\n    linkDistance,\n    repulsivity,\n    distanceMin,\n    distanceMax,\n    center,\n    iterations,\n}) => {\n    const [currentNodes, setCurrentNodes] = useState([])\n    const [currentLinks, setCurrentLinks] = useState([])\n\n    useEffect(() => {\n        const forces = computeForces({\n            linkDistance,\n            repulsivity,\n            distanceMin,\n            distanceMax,\n            center,\n        })\n\n        const nodesCopy = nodes.map(node => ({ ...node }))\n        const linksCopy = links.map(link => ({\n            id: `${link.source}.${link.target}`,\n            ...link,\n        }))\n\n        const simulation = forceSimulation(nodesCopy)\n            .force('link', forces.link.links(linksCopy))\n            .force('charge', forces.charge)\n            .force('center', forces.center)\n            .stop()\n\n        simulation.tick(iterations)\n\n        setCurrentNodes(nodesCopy)\n        setCurrentLinks(\n            linksCopy.map(link => {\n                link.previousSource = currentNodes.find(n => n.id === link.source.id)\n                link.previousTarget = currentNodes.find(n => n.id === link.target.id)\n\n                return link\n            })\n        )\n\n        return () => {\n            simulation.stop()\n        }\n    }, [\n        nodes,\n        links,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center[0],\n        center[1],\n    ])\n\n    return [currentNodes, currentLinks]\n}\n\nexport const useNodeColor = color =>\n    useMemo(() => {\n        if (typeof color === 'function') return color\n        return () => color\n    }, [color])\n\nexport const useNodeComponent = nodeComponent =>\n    useMemo(() => {\n        if (typeof nodeComponent === 'function') return nodeComponent\n        return () => nodeComponent\n    }, [nodeComponent])\n\nexport const useLinkThickness = thickness =>\n    useMemo(() => {\n        if (typeof thickness === 'function') return thickness\n        return () => thickness\n    }, [thickness])\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@nivo/core'\n\nconst willEnter = ({ style }) => ({\n    x: style.x.val,\n    y: style.y.val,\n    radius: style.radius.val,\n    scale: 0,\n})\n\nconst willLeave = springConfig => ({ style }) => ({\n    x: style.x,\n    y: style.y,\n    radius: style.radius,\n    scale: spring(0, springConfig),\n})\n\nconst AnimatedNodes = ({\n    nodes,\n    color,\n    borderWidth,\n    borderColor,\n    handleNodeHover,\n    handleNodeLeave,\n    nodeComponent,\n}) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            willLeave={willLeave(springConfig)}\n            styles={nodes.map(node => ({\n                key: node.id,\n                data: node,\n                style: {\n                    x: spring(node.x, springConfig),\n                    y: spring(node.y, springConfig),\n                    radius: spring(node.radius, springConfig),\n                    scale: spring(1, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: node }) => {\n                        return React.createElement(nodeComponent, {\n                            key: key,\n                            node: node,\n                            x: style.x,\n                            y: style.y,\n                            radius: Math.max(style.radius, 0),\n                            color: color(node),\n                            borderWidth: borderWidth,\n                            borderColor: borderColor(node),\n                            handleNodeHover: handleNodeHover,\n                            handleNodeLeave: handleNodeLeave,\n                        })\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n    nodeComponent: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst StaticNodes = ({\n    nodes,\n    color,\n    borderWidth,\n    borderColor,\n    handleNodeHover,\n    handleNodeLeave,\n    nodeComponent,\n}) => {\n    return nodes.map(node => {\n        return React.createElement(nodeComponent, {\n            key: node.id,\n            node: node,\n            x: node.x,\n            y: node.y,\n            radius: node.radius,\n            color: color(node),\n            borderWidth: borderWidth,\n            borderColor: borderColor(node),\n            handleNodeHover: handleNodeHover,\n            handleNodeLeave: handleNodeLeave,\n        })\n    })\n}\n\nStaticNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n    nodeComponent: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ sourceX, sourceY, targetX, targetY, thickness, color }) => {\n    return (\n        <line\n            stroke={color}\n            strokeWidth={thickness}\n            strokeLinecap=\"round\"\n            x1={sourceX}\n            y1={sourceY}\n            x2={targetX}\n            y2={targetY}\n        />\n    )\n}\n\nLink.propTypes = {\n    link: PropTypes.object.isRequired,\n    sourceX: PropTypes.number.isRequired,\n    sourceY: PropTypes.number.isRequired,\n    targetX: PropTypes.number.isRequired,\n    targetY: PropTypes.number.isRequired,\n    thickness: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n}\n\nexport default memo(Link)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@nivo/core'\nimport Link from './Link'\n\nconst willEnter = ({ style, data }) => {\n    const sourceX = data.previousSource ? data.previousSource.x : style.sourceX.val\n    const sourceY = data.previousSource ? data.previousSource.y : style.sourceY.val\n\n    return {\n        sourceX,\n        sourceY,\n        targetX: sourceX,\n        targetY: sourceY,\n    }\n}\n\nconst AnimatedLinks = ({ links, linkThickness, linkColor }) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            styles={links.map(link => ({\n                key: link.id,\n                data: link,\n                style: {\n                    sourceX: spring(link.source.x, springConfig),\n                    sourceY: spring(link.source.y, springConfig),\n                    targetX: spring(link.target.x, springConfig),\n                    targetY: spring(link.target.y, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: link }) => {\n                        return (\n                            <Link\n                                key={key}\n                                link={link}\n                                color={linkColor(link)}\n                                thickness={linkThickness(link)}\n                                sourceX={style.sourceX}\n                                sourceY={style.sourceY}\n                                targetX={style.targetX}\n                                targetY={style.targetY}\n                            />\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedLinks)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Link from './Link'\n\nconst StaticLinks = ({ links, linkThickness, linkColor }) => {\n    return links.map(link => {\n        return (\n            <Link\n                key={link.id}\n                link={link}\n                color={linkColor(link)}\n                thickness={linkThickness(link)}\n                sourceX={link.source.x}\n                sourceY={link.source.y}\n                targetX={link.target.x}\n                targetY={link.target.y}\n            />\n        )\n    })\n}\n\nStaticLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticLinks)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst NetworkNodeTooltip = ({ node, format, tooltip }) => (\n    <BasicTooltip\n        id={node.id}\n        enableChip={true}\n        color={node.color}\n        format={format}\n        renderContent={typeof tooltip === 'function' ? tooltip.bind(null, { ...node }) : null}\n    />\n)\n\nNetworkNodeTooltip.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n    format: PropTypes.func,\n    tooltip: PropTypes.func,\n}\n\nexport default memo(NetworkNodeTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment, useCallback } from 'react'\nimport { withContainer, useDimensions, SvgWrapper, useTheme, useMotionConfig } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { NetworkPropTypes, NetworkDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness, useNodeComponent } from './hooks'\nimport AnimatedNodes from './AnimatedNodes'\nimport StaticNodes from './StaticNodes'\nimport AnimatedLinks from './AnimatedLinks'\nimport StaticLinks from './StaticLinks'\nimport NetworkNodeTooltip from './NetworkNodeTooltip'\n\nconst Network = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n        nodeComponent,\n\n        linkThickness,\n        linkColor,\n        tooltip,\n        isInteractive,\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { animate } = useMotionConfig()\n    const theme = useTheme()\n    const getColor = useNodeColor(nodeColor)\n    const getNodeComponent = useNodeComponent(nodeComponent)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleNodeHover = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(<NetworkNodeTooltip node={node} tooltip={tooltip} />, event)\n        },\n        [showTooltipFromEvent, tooltip]\n    )\n\n    const handleNodeLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const layerById = {\n        links: React.createElement(animate === true ? AnimatedLinks : StaticLinks, {\n            key: 'links',\n            links,\n            linkThickness: getLinkThickness,\n            linkColor: getLinkColor,\n        }),\n        nodes: React.createElement(animate === true ? AnimatedNodes : StaticNodes, {\n            key: 'nodes',\n            nodes,\n            color: getColor,\n            borderWidth: nodeBorderWidth,\n            borderColor: getBorderColor,\n            nodeComponent: getNodeComponent,\n            handleNodeHover: isInteractive ? handleNodeHover : undefined,\n            handleNodeLeave: isInteractive ? handleNodeLeave : undefined,\n        }),\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                nodes,\n                                links,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nNetwork.propTypes = NetworkPropTypes\nNetwork.defaultProps = NetworkDefaultProps\n\nexport default withContainer(Network)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Network from './Network'\n\nconst ResponsiveNetwork = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Network width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetwork\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useRef, useEffect } from 'react'\nimport { withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { NetworkCanvasPropTypes, NetworkCanvasDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness, useNodeComponent } from './hooks'\n\nconst NetworkCanvas = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n        nodeComponent,\n\n        linkThickness,\n        linkColor,\n\n        isInteractive,\n    } = props\n\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const theme = useTheme()\n    const getNodeColor = useNodeColor(nodeColor)\n    const getNodeComponent = useNodeComponent(nodeComponent)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'links') {\n                links.forEach(link => {\n                    ctx.strokeStyle = getLinkColor(link)\n                    ctx.lineWidth = getLinkThickness(link)\n                    ctx.beginPath()\n                    ctx.moveTo(link.source.x, link.source.y)\n                    ctx.lineTo(link.target.x, link.target.y)\n                    ctx.stroke()\n                })\n            } else if (layer === 'nodes') {\n                nodes.forEach(node => {\n                    ctx.fillStyle = getNodeColor(node)\n                    ctx.beginPath()\n                    ctx.arc(node.x, node.y, node.radius, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (nodeBorderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(node)\n                        ctx.lineWidth = nodeBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else if (typeof layer === 'function') {\n                layer(ctx, {\n                    ...props,\n                    nodes,\n                    links,\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        nodes,\n        links,\n        getNodeColor,\n        getNodeComponent,\n        nodeBorderWidth,\n        getBorderColor,\n        getLinkThickness,\n        getLinkColor,\n    ])\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n        />\n    )\n}\n\nNetworkCanvas.propTypes = NetworkCanvasPropTypes\nNetworkCanvas.defaultProps = NetworkCanvasDefaultProps\n\nexport default withContainer(NetworkCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport NetworkCanvas from './NetworkCanvas'\n\nconst ResponsiveNetworkCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <NetworkCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetworkCanvas\n"],"names":["defineProperty","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","Node","node","x","y","radius","color","borderWidth","borderColor","scale","handleNodeHover","handleNodeLeave","React","event","commonPropTypes","nodes","PropTypes","arrayOf","shape","id","string","isRequired","links","source","target","layers","oneOfType","oneOf","func","linkDistance","number","repulsivity","distanceMin","distanceMax","iterations","nodeColor","nodeBorderWidth","nodeBorderColor","inheritedColorPropType","nodeComponent","linkThickness","linkColor","isInteractive","bool","NetworkPropTypes","role","motionPropTypes","NetworkCanvasPropTypes","pixelRatio","commonDefaultProps","Infinity","from","NetworkDefaultProps","animate","motionStiffness","motionDamping","NetworkCanvasDefaultProps","global","window","devicePixelRatio","computeForces","center","computedLinkDistance","isNumber","isString","link","get","linkForce","forceLink","d","distance","chargeForce","forceManyBody","strength","centerForce","forceCenter","charge","useNetwork","useState","currentNodes","setCurrentNodes","currentLinks","setCurrentLinks","useEffect","forces","nodesCopy","map","linksCopy","simulation","forceSimulation","force","stop","tick","previousSource","find","n","previousTarget","useNodeColor","useMemo","useNodeComponent","useLinkThickness","thickness","willEnter","style","val","willLeave","springConfig","spring","AnimatedNodes","useMotionConfig","TransitionMotion","key","data","interpolatedStyles","createElement","Math","max","memo","StaticNodes","Link","sourceX","sourceY","targetX","targetY","AnimatedLinks","StaticLinks","NetworkNodeTooltip","format","tooltip","BasicTooltip","bind","Network","props","width","height","partialMargin","margin","rawNodes","rawLinks","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","theme","useTheme","getColor","getNodeComponent","getBorderColor","useInheritedColor","getLinkThickness","getLinkColor","useTooltip","showTooltipFromEvent","hideTooltip","useCallback","layerById","undefined","SvgWrapper","layer","i","Fragment","defaultProps","withContainer","ResponsiveNetwork","ResponsiveWrapper","NetworkCanvas","canvasEl","useRef","getNodeColor","current","ctx","getContext","fillStyle","background","fillRect","translate","left","top","forEach","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","arc","PI","fill","cursor","ResponsiveNetworkCanvas"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@nivo/network/index.d.ts b/node_modules/@nivo/network/index.d.ts
index 8e0e24d..5dec9a3 100644
--- a/node_modules/@nivo/network/index.d.ts
+++ b/node_modules/@nivo/network/index.d.ts
@@ -66,6 +66,7 @@ declare module '@nivo/network' {
         layers?: Layer[]
 
         nodeColor: string | NodeAccessor<ComputedNode, string>
+        nodeComponent?: NodeAccessor<ComputedNode, React.ReactNode>
         nodeBorderWidth?: number
         nodeBorderColor?: InheritedColorConfig<ComputedNode>
 
